{"version":3,"file":"static/js/377.c25098e6.chunk.js","mappings":"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","sources":["views/app-views/user/role/index.js","../node_modules/@ant-design/icons-svg/es/asn/SearchOutlined.js","../node_modules/@ant-design/icons/es/icons/SearchOutlined.js","../node_modules/antd/es/_util/statusUtils.js","../node_modules/antd/es/col/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Table,\n  Input,\n  Modal,\n  message,\n  Form,\n  Checkbox,\n} from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport API from \"services/Api\";\n\nconst RoleManagement = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [rolesData, setRolesData] = useState([]);\n  const [newRolePermissions, setNewRolePermissions] = useState([]);\n  const [updatedPermissions, setUpdatedPermissions] = useState({});\n  const formRef = useRef(null);\n  // const [pagePermission, setPagePermission] = useState(true);\n\n  useEffect(() => {\n    // const user = JSON.parse(localStorage.getItem(\"userDetails\"));\n    const getRolesAndPermissions = async () => {\n      try {\n        const response = await API(\"user/roles/list/\", \"GET\", {});\n        if (response.status === \"success\") {\n          setRolesData(response.data);\n          console.log(\"Roles and Permissions:\", response.data);\n        } else {\n          message.error(\"Failed to load roles and permissions\");\n        }\n      } catch (error) {\n        message.error(\"Error fetching roles and permissions: \" + error);\n      }\n    };\n    getRolesAndPermissions();\n\n    const getModules = async () => {\n      try {\n        const response = await API(\"user/modules/list/\", \"GET\", {});\n        if (response.status === \"success\") {\n          const initialPermissions = response.data.map((module) => ({\n            module,\n            can_create: false,\n            can_view: false,\n            can_edit: false,\n            can_delete: false,\n          }));\n          setNewRolePermissions(initialPermissions);\n        } else {\n          message.error(\"Failed to load modules\");\n        }\n      } catch (error) {\n        message.error(\"Error fetching modules: \" + error);\n      }\n    };\n    getModules();\n  }, []);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    formRef.current\n      .validateFields()\n      .then((values) => {\n        const transformedPermissions = newRolePermissions.map((perm) => ({\n          module_id: perm.module.id,\n          can_create: perm.can_create,\n          can_view: perm.can_view,\n          can_edit: perm.can_edit,\n          can_delete: perm.can_delete,\n        }));\n\n        const newRoleData = {\n          name: values.roleName,\n          permissions: transformedPermissions,\n        };\n\n        API(\"user/role/\", \"POST\", newRoleData)\n          .then((response) => {\n            if (response.status === \"success\") {\n              message.success(\"Role created successfully\");\n              console.log(\"New Role:\", newRoleData);\n              setRolesData([...rolesData, response.data]);\n            } else {\n              message.error(\"Failed to create role\");\n            }\n          })\n          .catch((error) => {\n            message.error(\"Error creating role: \" + error);\n          });\n\n        formRef.current.resetFields();\n        setIsModalVisible(false);\n      })\n      .catch((info) => {\n        console.log(\"Validate Failed:\", info);\n      });\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  // Handle checkbox change for permissions in the main table\n  const handleMainTableCheckboxChange = (roleId, moduleKey, permissionType) => {\n    setRolesData((prevRolesData) =>\n      prevRolesData.map((role) =>\n        role.id === roleId\n          ? {\n              ...role,\n              permissions: role.permissions.map((perm, index) =>\n                index === moduleKey\n                  ? { ...perm, [permissionType]: !perm[permissionType] }\n                  : perm\n              ),\n            }\n          : role\n      )\n    );\n    // Mark this role as having changes for the Update button\n    setUpdatedPermissions((prevUpdated) => ({\n      ...prevUpdated,\n      [roleId]: true,\n    }));\n  };\n\n  const handleUpdatePermissions = async (roleId) => {\n    // Find the role data from rolesData using roleId\n    const roleToUpdate = rolesData.find((role) => role.id === roleId);\n\n    // Transform the role data to match the API's expected structure\n    const updatedRolePermissions = {\n      id: roleToUpdate.id,\n      name: roleToUpdate.name,\n      permissions: roleToUpdate.permissions.map((perm) => ({\n        id: perm.id,\n        module_id: perm.module,\n        can_create: perm.can_create,\n        can_view: perm.can_view,\n        can_edit: perm.can_edit,\n        can_delete: perm.can_delete,\n      })),\n    };\n\n    try {\n      const response = await API(\n        `user/roles/${updatedRolePermissions.id}/`,\n        \"PUT\",\n        updatedRolePermissions\n      );\n\n      if (response.status === \"success\") {\n        message.success(\"Permissions updated successfully\");\n      } else {\n        message.error(\"Failed to update permissions\");\n      }\n    } catch (error) {\n      message.error(\"Error updating permissions: \" + error);\n    }\n  };\n\n  const handleModalCheckboxChange = (index, permissionType) => {\n    setNewRolePermissions((prevPermissions) =>\n      prevPermissions.map((perm, permIndex) =>\n        permIndex === index\n          ? { ...perm, [permissionType]: !perm[permissionType] }\n          : perm\n      )\n    );\n  };\n\n  const modalPermissionsColumns = [\n    {\n      title: \"Module\",\n      dataIndex: \"module\",\n      key: \"module.id\",\n      render: (module) => module.name,\n    },\n    {\n      title: \"Create\",\n      dataIndex: \"can_create\",\n      key: \"can_create\",\n      render: (value, _, index) => (\n        <Checkbox\n          checked={value}\n          onChange={() => handleModalCheckboxChange(index, \"can_create\")}\n        />\n      ),\n    },\n    {\n      title: \"View\",\n      dataIndex: \"can_view\",\n      key: \"can_view\",\n      render: (value, _, index) => (\n        <Checkbox\n          checked={value}\n          onChange={() => handleModalCheckboxChange(index, \"can_view\")}\n        />\n      ),\n    },\n    {\n      title: \"Edit\",\n      dataIndex: \"can_edit\",\n      key: \"can_edit\",\n      render: (value, _, index) => (\n        <Checkbox\n          checked={value}\n          onChange={() => handleModalCheckboxChange(index, \"can_edit\")}\n        />\n      ),\n    },\n    {\n      title: \"Delete\",\n      dataIndex: \"can_delete\",\n      key: \"can_delete\",\n      render: (value, _, index) => (\n        <Checkbox\n          checked={value}\n          onChange={() => handleModalCheckboxChange(index, \"can_delete\")}\n        />\n      ),\n    },\n  ];\n\n  const permissionsColumns = [\n    {\n      title: \"Module\",\n      dataIndex: \"module\",\n      key: \"module\",\n      render: (module) => module.name,\n    },\n    {\n      title: \"Create\",\n      dataIndex: \"can_create\",\n      key: \"can_create\",\n      render: (value, record, index) => (\n        <Checkbox\n          checked={value}\n          onChange={() =>\n            handleMainTableCheckboxChange(record.roleId, index, \"can_create\")\n          }\n        />\n      ),\n    },\n    {\n      title: \"View\",\n      dataIndex: \"can_view\",\n      key: \"can_view\",\n      render: (value, record, index) => (\n        <Checkbox\n          checked={value}\n          onChange={() =>\n            handleMainTableCheckboxChange(record.roleId, index, \"can_view\")\n          }\n        />\n      ),\n    },\n    {\n      title: \"Edit\",\n      dataIndex: \"can_edit\",\n      key: \"can_edit\",\n      render: (value, record, index) => (\n        <Checkbox\n          checked={value}\n          onChange={() =>\n            handleMainTableCheckboxChange(record.roleId, index, \"can_edit\")\n          }\n        />\n      ),\n    },\n    {\n      title: \"Delete\",\n      dataIndex: \"can_delete\",\n      key: \"can_delete\",\n      render: (value, record, index) => (\n        <Checkbox\n          checked={value}\n          onChange={() =>\n            handleMainTableCheckboxChange(record.roleId, index, \"can_delete\")\n          }\n        />\n      ),\n    },\n  ];\n\n  const expandedRowRender = (record) => {\n    console.log(\"Expanded Record:\", record);\n    return (\n      <Table\n        columns={permissionsColumns}\n        dataSource={record.permissions.map((perm, index) => ({\n          ...perm,\n          key: index,\n          roleId: record.id,\n        }))}\n        pagination={false}\n        rowKey=\"key\"\n      />\n    );\n  };\n\n  // Updated rolesColumns to add an \"Update\" button when permissions change\n  const rolesColumns = [\n    {\n      title: \"Roles\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      fixed: \"right\", // Fix the column to the right\n      width: 100, // Optional: set a width for the action column\n      render: (_, record) =>\n        updatedPermissions[record.id] ? (\n          <Button\n            type=\"primary\"\n            onClick={() => handleUpdatePermissions(record.id)}\n          >\n            Update\n          </Button>\n        ) : null,\n    },\n  ];\n  return (\n    <>\n      {/* {!pagePermission ? (\n        <h1>You do not have permission to view this page</h1>\n      ) : ( */}\n        <div className=\"organization\">\n          <Row justify=\"space-between\" style={{ marginBottom: \"25px\" }}>\n            <Col></Col>\n            <Col>\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={showModal}\n              >\n                Add Role\n              </Button>\n            </Col>\n          </Row>\n\n          <Table\n            dataSource={rolesData}\n            columns={rolesColumns}\n            expandable={{\n              expandedRowRender,\n            }}\n            rowKey=\"id\"\n            scroll={{ x: \"max-content\" }} // Enable horizontal scrolling if necessary\n          />\n\n          {/* Add Role Modal */}\n          <Modal\n            title=\"Add New Role\"\n            open={isModalVisible}\n            onOk={handleOk}\n            onCancel={handleCancel}\n            okText=\"Submit\"\n            cancelText=\"Cancel\"\n            width={800}\n            style={{ top: 20 }}\n            bodyStyle={{\n              maxHeight: \"70vh\",\n              overflowY: \"auto\",\n              overflowX: \"hidden\",\n            }}\n          >\n            <Form ref={formRef} layout=\"vertical\" name=\"add_role_form\">\n              <Form.Item\n                name=\"roleName\"\n                label=\"Role Name\"\n                rules={[\n                  { required: true, message: \"Please enter a role name\" },\n                ]}\n              >\n                <Input placeholder=\"Enter Role Name\" />\n              </Form.Item>\n\n              {/* Permissions Table for New Role */}\n              <Table\n                columns={modalPermissionsColumns}\n                dataSource={newRolePermissions}\n                pagination={false}\n                rowKey=\"module.id\"\n              />\n            </Form>\n          </Modal>\n        </div>\n      {/* )} */}\n    </>\n  );\n};\n\nexport default RoleManagement;\n","// This icon file is generated automatically.\nvar SearchOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" } }] }, \"name\": \"search\", \"theme\": \"outlined\" };\nexport default SearchOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SearchOutlinedSvg from \"@ant-design/icons-svg/es/asn/SearchOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SearchOutlined = function SearchOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SearchOutlinedSvg\n  }));\n};\nSearchOutlined.displayName = 'SearchOutlined';\nexport default /*#__PURE__*/React.forwardRef(SearchOutlined);","import classNames from 'classnames';\nconst InputStatuses = ['warning', 'error', ''];\nexport function getStatusClassNames(prefixCls, status, hasFeedback) {\n  return classNames({\n    [`${prefixCls}-status-success`]: status === 'success',\n    [`${prefixCls}-status-warning`]: status === 'warning',\n    [`${prefixCls}-status-error`]: status === 'error',\n    [`${prefixCls}-status-validating`]: status === 'validating',\n    [`${prefixCls}-has-feedback`]: hasFeedback\n  });\n}\nexport const getMergedStatus = (contextStatus, customStatus) => customStatus || contextStatus;","import { Col } from '../grid';\nexport default Col;","import { Row } from '../grid';\nexport default Row;"],"names":["useState","isModalVisible","setIsModalVisible","rolesData","setRolesData","newRolePermissions","setNewRolePermissions","updatedPermissions","setUpdatedPermissions","formRef","useRef","useEffect","getRolesAndPermissions","API","response","status","data","console","log","message","getModules","initialPermissions","map","module","can_create","can_view","can_edit","can_delete","handleMainTableCheckboxChange","roleId","moduleKey","permissionType","prevRolesData","role","id","permissions","perm","index","prevUpdated","handleUpdatePermissions","roleToUpdate","find","updatedRolePermissions","name","module_id","handleModalCheckboxChange","prevPermissions","permIndex","modalPermissionsColumns","title","dataIndex","key","render","value","_","checked","onChange","permissionsColumns","record","rolesColumns","fixed","width","type","onClick","className","justify","style","marginBottom","icon","dataSource","columns","expandable","expandedRowRender","pagination","rowKey","scroll","x","open","onOk","current","validateFields","then","values","transformedPermissions","newRoleData","roleName","catch","error","resetFields","info","onCancel","okText","cancelText","top","bodyStyle","maxHeight","overflowY","overflowX","ref","layout","label","rules","required","placeholder","SearchOutlined","props","React","AntdIcon","_objectSpread","SearchOutlinedSvg","displayName","getStatusClassNames","prefixCls","hasFeedback","classNames","getMergedStatus","contextStatus","customStatus","Col","Row"],"sourceRoot":""}