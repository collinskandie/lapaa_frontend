{"version":3,"file":"static/js/500.f636731c.chunk.js","mappings":"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","sources":["views/app-views/user/list/userModal.js","views/app-views/user/list/index.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport { Modal, Form, Input, Select, Row, Col, Card } from \"antd\";\n\nconst { Option } = Select;\n\nconst UserModal = forwardRef(({ visible, onCancel, onOk, rolesData }, ref) => {\n  return (\n    <Modal\n      title=\"Add User\"\n      open={visible}\n      onOk={onOk}\n      onCancel={onCancel}\n      okText=\"Submit\"\n      cancelText=\"Cancel\"\n      width={800}\n      style={{ top: 20 }}\n      bodyStyle={{\n        maxHeight: \"70vh\",\n        overflowY: \"auto\",\n        overflowX: \"hidden\",\n      }}\n    >\n      <Form\n        ref={ref}\n        layout=\"vertical\"\n        // initialValues={{ organisation: organizationId }} // Set initial values here\n        // initialValues={organizationId ? { organisation: organizationId } : {}}\n        name=\"add_entry_form\"\n      >\n        <Row gutter={16}>\n          <Col xs={24} sm={24} md={24}>\n            <Card title=\"User Details\">\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Form.Item\n                    name=\"full_name\"\n                    label=\"Full name\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please enter the Full Name\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Enter full name\" />\n                  </Form.Item>\n                </Col>\n                <Col span={12}>\n                  <Form.Item\n                    name=\"phone\"\n                    label=\"Phone Number\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please enter a phone number\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Enter a Phone number\" />\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Form.Item\n                    name=\"email\"\n                    label=\"Email\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please enter a valid Email Address\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Enter an Email Address\" />\n                  </Form.Item>\n                </Col>\n                <Col span={12}>\n                  <Form.Item\n                    name=\"password\"\n                    label=\"Password\"\n                    rules={[\n                      { required: true, message: \"Please enter a password\" },\n                    ]}\n                  >\n                    <Input type=\"password\" placeholder=\"Enter a password\" />\n                  </Form.Item>\n                </Col>\n              </Row>\n            </Card>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  name=\"roles\"\n                  label=\"Role\"\n                  rules={[{ required: true, message: \"Please select a Role\" }]}\n                >\n                  <Select placeholder=\"Select a Role\">\n                    {Array.isArray(rolesData) && rolesData.length > 0 ? (\n                      rolesData.map((role) => (\n                        <Option key={role.id} value={role.id}>\n                          {role.name}\n                        </Option>\n                      ))\n                    ) : (\n                      <Option disabled>No Roles Defined</Option>\n                    )}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n});\n\nexport default UserModal;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { message, Button, Row, Col, Table, Input } from \"antd\";\nimport { SearchOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport API from \"services/Api\";\nimport UserModal from \"./userModal\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nconst baseUrl = process.env.REACT_APP_LIVE_URL;\n\nconst User = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [rolesData, setRolesData] = useState([]);\n\n  const [users, setUsers] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const navigate = useNavigate();\n  const formRef = useRef(null);\n  const columns = [\n    { title: \"Full Name\", dataIndex: \"full_name\", key: \"full_name\" },\n    { title: \"Phone\", dataIndex: \"phone_no\", key: \"phone_no\" },\n    { title: \"Email\", dataIndex: \"email\", key: \"email\" },\n\n    {\n      title: \"Roles\",\n      dataIndex: \"is_mobile_user\",\n      key: \"is_mobile_user\",\n      render: (is_mobile_user) => (is_mobile_user ? \"Field Agent\" : \"Web User\"),\n    },\n\n    {\n      title: \"Created At\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      render: (created_at) =>\n        created_at ? moment(created_at).format(\"MMMM D, YYYY h:mm A\") : \"N/A\",\n    },\n    {\n      title: \"Actions\",\n      key: \"actions\",\n      render: (text, record) => (\n        <Button type=\"link\" onClick={() => navigateToUserManage(record)}>\n          Manage\n        </Button>\n      ),\n    },\n  ];\n  // const [pagePermission, setPagePermission] = useState(true);\n\n  useEffect(() => {\n    // const user = JSON.parse(localStorage.getItem(\"userDetails\"));\n    // const permissions = user?.permissions || [];\n    // const hasDashboardPermission = permissions.some(\n    //   (permission) =>\n    //     permission.module.name === \"System Users\" && permission.can_view\n    // );\n    // setPagePermission(hasDashboardPermission);\n    const getUsers = async () => {\n      try {\n        const response = await API(\"/user/users/list/\", \"GET\", {});\n        if (response.status === \"success\") {\n          setUsers(response.data);\n        } else {\n          message.error(\"Failed to load Users\");\n        }\n      } catch (error) {\n        message.error(error);\n      }\n    };\n\n    const getRolesAndPermissions = async () => {\n      try {\n        const response = await API(\"/user/role/list/\", \"GET\", {});\n        if (response.status === \"success\") {\n          setRolesData(response.data);\n        } else {\n          message.error(\"Failed to load roles and permissions\");\n        }\n      } catch (error) {\n        message.error(\"Error fetching roles and permissions: \" + error);\n      }\n    };\n\n    getRolesAndPermissions();\n\n    getUsers();\n  }, []);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const navigateToUserManage = (user) => {\n    navigate(\n      `/solichain/usermanagement/systemusers/webusers/manage/${user.id}`\n    );\n  };\n\n  const handleOk = () => {\n    formRef.current\n      .validateFields()\n      .then((values) => {\n        const payload = {\n          full_name: values.full_name,\n          email: values.email,\n          phone_no: values.phone,\n\n          roles: [values.roles],\n          password: values.password,\n          photo: `${baseUrl}/static/profile/user1`,\n        };\n\n        API(\"/user/register/\", \"POST\", payload)\n          .then((d) => {\n            if (d.status === \"success\") {\n              message.success(\n                `User Agent ${values.full_name} added successfully`\n              );\n              setUsers((prevUsers) => [...prevUsers, d.data]);\n            } else {\n              console.log(JSON.stringify(d));\n            }\n          })\n          .catch((error) => {\n            message.error(\"Failed to add User\");\n            console.log(error);\n          });\n\n        formRef.current.resetFields();\n        setIsModalVisible(false);\n      })\n      .catch((info) => {\n        console.log(\"Validate Failed:\", info);\n      });\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const filteredeUsers = users\n    ? users.filter((user) =>\n      user.full_name.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n    : [];\n\n  return (\n    <>\n      {/* {!pagePermission ? (\n        <h1>You do not have permission to view this page</h1>\n      ) : ( */}\n      <div className=\"users\">\n        <Row justify=\"space-between\" style={{ marginBottom: \"25px\" }}>\n          <Col>\n            <Input\n              placeholder=\"Search User\"\n              onChange={handleSearchChange}\n              prefix={<SearchOutlined />}\n              style={{ width: 200 }}\n            />\n          </Col>\n          <Col>\n            <Button\n              type=\"primary\"\n              icon={<PlusOutlined />}\n              onClick={showModal}\n            >\n              Add User\n            </Button>\n          </Col>\n        </Row>\n        <Table dataSource={filteredeUsers} columns={columns} rowKey=\"id\" />\n        <UserModal\n          visible={isModalVisible}\n          onCancel={handleCancel}\n          onOk={handleOk}\n          rolesData={rolesData}\n          ref={formRef}\n        />\n      </div>\n      {/* )} */}\n    </>\n  );\n};\n\nexport default User;\n"],"names":["Option","Select","forwardRef","ref","visible","onCancel","onOk","rolesData","title","open","okText","cancelText","width","style","top","bodyStyle","maxHeight","overflowY","overflowX","layout","name","gutter","xs","sm","md","span","label","rules","required","message","placeholder","type","Array","isArray","length","map","role","value","id","disabled","useState","isModalVisible","setIsModalVisible","setRolesData","users","setUsers","searchTerm","setSearchTerm","navigate","useNavigate","formRef","useRef","columns","dataIndex","key","render","is_mobile_user","created_at","moment","format","text","record","onClick","navigateToUserManage","useEffect","getUsers","API","response","status","data","getRolesAndPermissions","user","filteredeUsers","filter","full_name","toLowerCase","includes","className","justify","marginBottom","onChange","e","target","prefix","SearchOutlined","icon","PlusOutlined","dataSource","rowKey","current","validateFields","then","values","payload","email","phone_no","phone","roles","password","photo","process","d","prevUsers","console","log","JSON","stringify","catch","error","resetFields","info"],"sourceRoot":""}