{"version":3,"file":"static/js/602.3e5ab2d5.chunk.js","mappings":"6KAiEA,IA1D6B,SAAH,GAAoD,IAA/CA,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAC/D,GAAsCC,EAAAA,EAAAA,UAAS,GAAE,eAA1CC,EAAW,KAAEC,EAAc,KAC5BC,GAAMC,EAAAA,EAAAA,QAAO,MAEbC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMH,OAAO,IAClDI,GAAeH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,YAAY,KAEhEC,EAAAA,EAAAA,YAAU,WACX,GAAIL,IAAYM,EAAAA,GAAc,CAC7B,IAAMC,EAAaC,OAAOC,WACpBC,EAAiBZ,EAAIa,QAAQC,YACnCf,GAAiBU,EAAaG,GAAkB,EACjD,CACD,GAAG,CAACV,IAaJ,OACC,eACCF,IAAKA,EACLe,KAAKA,EAAAA,EAAAA,IAAG,uSAC8B,SAAjBT,EAA0B,UAAYU,EAAAA,GAAAA,MAC/CC,EAAAA,GAAAA,sBACIA,EAAAA,GAAAA,sBACCA,EAAAA,GAAAA,sBACCA,EAAAA,GAAAA,sBAERC,EAAAA,GAAAA,OACQD,EAAAA,GAAAA,yBACOA,EAAAA,GAAAA,yBAGtBrB,EAAU,6BAA+B,IAE5CD,UAAS,0BAAqBA,GAAwB,IACtDwB,MA7Be,WAChB,IAAIA,EAAQ,CAAEC,gBAAiB1B,EAAU,cAAUA,EAAU,KAAM,QAOnE,OANIQ,IAAYM,EAAAA,KACfW,EAAME,aAAevB,EACrBqB,EAAMG,YAAcxB,EACpBqB,EAAMI,YAAc,EACpBJ,EAAMK,aAAe,GAEfL,CACR,CAoBSM,GAAW,SAEjBvB,IAAYM,EAAAA,IAAe,eAAKb,UAAU,YAAW,SAAEF,KAAkB,uBAAGA,KAGhF,C,qCCtDMiC,E,QAAOC,EAAAA,KAAW,YAAwE,IAAtEC,EAAc,EAAdA,eAAgBC,EAAU,EAAVA,WAAYC,EAAa,EAAbA,cAAeC,EAAG,EAAHA,IAAKC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAE5EC,EAAY,CACjBC,QAAS,OACTP,eAAgBA,EAChBC,WAAYA,EACZE,IAAoB,kBAARA,EAAgB,UAAMA,EAAG,MAAOA,GAe7C,OAZID,IACHI,EAAUJ,cAAgBA,GAGvBE,IACHE,EAAUF,QAAUA,GAGjBC,IACHC,EAAUD,OAASA,IAGb,UAAIC,EACZ,IAEA,K,0PCjBQE,EAASC,EAAAA,EAAAA,KACTC,EAAWC,EAAAA,EAAAA,OACXC,EAAaC,EAAAA,EAAAA,SA6WrB,UA3W0B,WACtB,OAA8B5C,EAAAA,EAAAA,UAAS,GAAE,eAAlCgB,EAAO,KAAE6B,EAAU,KAC1B,EAAeC,EAAAA,EAAAA,UAARC,GAAsB,YAAlB,GACX,GAA8B/C,EAAAA,EAAAA,WAAS,GAAM,eAAtCgD,EAAO,KAAEC,EAAU,KAUpBC,EAAQ,yCAAG,WAAOC,GAAM,8EA+DtB,OA/DsB,SAEtBF,GAAW,GAGLG,EAAU,CACZC,UAAWF,EAAOG,UAAY,GAC9BC,cAAeJ,EAAOK,IAAMC,IAAMN,EAAOK,KAAKE,OAAO,cAAgB,KACrEC,OAAQR,EAAOQ,QAAU,GACzBC,YAAaT,EAAOU,YAAc,GAClCC,MAAOX,EAAOW,OAAS,GACvBC,MAAOZ,EAAOY,OAAS,KACvBC,OAAQb,EAAOa,QAAU,GACzBC,WAAYd,EAAOe,WAAa,GAChCC,KAAMhB,EAAOgB,MAAQ,GACrBC,QAASjB,EAAOiB,SAAW,MAC3BC,SAAUlB,EAAOkB,UAAY,MAC7BC,aAAcnB,EAAOoB,aAAe,MAIpCC,UAAW,CACP,CACIC,cAAetB,EAAOuB,gBAAkB,GACxCC,eAAgBxB,EAAOyB,cAAgB,GACvCC,YAAa1B,EAAO0B,aAAe,GACnCC,eAAgB3B,EAAO4B,cACjBC,SAAS7B,EAAO4B,eAChB,OAIdE,QAAS9B,EAAO8B,QAAU,IAAIC,KAAI,SAAAC,GAAK,MAAK,CACxCC,KAAMD,EACNE,YAAa,eACbC,oBAAqBnC,EAAOoC,gBACtBP,SAAS7B,EAAOoC,iBAChB,EACT,IAEDC,mBAAoB,CAChB,CACIC,eAAgBtC,EAAOuC,kBAAoB,GAC3CC,aAAcxC,EAAOyC,aAAe,GACpCC,KAAM1C,EAAO2C,WAAa,GAC1BC,WAAY5C,EAAO6C,WAAa,KAChCC,SAAU9C,EAAO+C,SAAW,KAC5BC,eAAgBhD,EAAOiD,eAAiB,GACxCC,kBAAmBlD,EAAOmD,kBAAoB,KAItDC,UAAW,CACP,CACIC,cAAe,UACfC,YAAatD,EAAOuD,aAAe,MAM/CC,QAAQC,IAAI,gCAAuBxD,GAEnC,UACuByD,EAAAA,EAAAA,IAAI,WAAY,OAAQzD,GAAQ,OAAjD0D,EAAQ,OACdC,EAAAA,GAAAA,QAAgB,+CAChBJ,QAAQC,IAAI,uBAAmBE,EAASE,MAExCjE,EAAKkE,cACLpE,EAAW,GAAE,kDAEb8D,QAAQO,MAAM,sCAAiC,EAAD,IAC9CH,EAAAA,GAAAA,MAAc,qDAAoD,QAEjD,OAFiD,UAElE9D,GAAW,GAAM,6EAExB,gBA5Ea,sCA6ERkE,EAAQ,CACV,CACIC,MAAO,mBACPC,SACI,UAAC,IAAG,CAACC,OAAQ,GAAG,WACZ,SAAC,IAAG,CAACC,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,WAAWoC,MAAM,YAAYC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UACrE,SAAC,IAAK,CAACC,YAAY,yBAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,MAAMoC,MAAM,gBAAgBC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UACpE,SAAC,IAAU,CAACpG,MAAO,CAAEsG,MAAO,eAGpC,SAAC,IAAG,CAACL,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,SAASoC,MAAM,SAASC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UAChE,UAAC,IAAM,CAACC,YAAY,gBAAe,WAC/B,SAAClF,EAAM,CAACoF,MAAM,OAAM,mBACpB,SAACpF,EAAM,CAACoF,MAAM,SAAQ,qBACtB,SAACpF,EAAM,CAACoF,MAAM,QAAO,2BAIjC,SAAC,IAAG,CAACN,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,aAAaoC,MAAM,cAAcC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UACzE,SAAC,IAAK,CAACC,YAAY,2BAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,QAAQoC,MAAM,eAAeC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UACrE,SAAC,IAAK,CAACC,YAAY,yBAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,QAAQoC,MAAM,QAAQC,MAAO,CAAC,CAC1CK,KAAM,QAASf,QAAS,mCACzB,UACC,SAAC,IAAK,CAACe,KAAK,QAAQH,YAAY,cAAcF,MAAO,CAAC,CAAEK,KAAM,QAASf,QAAS,6CAMpG,CACIK,MAAO,WACPC,SACI,UAAC,IAAG,CAACC,OAAQ,GAAG,WACZ,SAAC,IAAG,CAACC,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,SAASoC,MAAM,SAASC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UAChE,SAAC,IAAK,CAACC,YAAY,sBAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,YAAYoC,MAAM,aAAaC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UACvE,SAAC,IAAK,CAACC,YAAY,0BAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,OAAOoC,MAAM,OAAOC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UAC5D,SAAC,IAAK,CAACC,YAAY,oBAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,WAAWoC,MAAM,WAAWC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UACpE,SAAC,IAAK,CAACC,YAAY,uBAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,cAAcoC,MAAM,eAAeC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UAC3E,SAAC,IAAK,CAACC,YAAY,uBAI3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,UAAUoC,MAAM,UAAUC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UAClE,SAAC,IAAK,CAACC,YAAY,0BAMvC,CACIP,MAAO,qBACPC,SACI,UAAC,IAAG,CAACC,OAAQ,GAAG,WACZ,SAAC,IAAG,CAACC,KAAM,GAAG,UACV,SAAC,SAAS,CACNnC,KAAK,iBACLoC,MAAM,0BACNC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UAE5B,UAAC,IAAM,CAACC,YAAY,eAAc,WAC9B,SAAClF,EAAM,CAACoF,MAAM,cAAa,0BAC3B,SAACpF,EAAM,CAACoF,MAAM,UAAS,6BACvB,SAACpF,EAAM,CAACoF,MAAM,YAAW,+BACzB,SAACpF,EAAM,CAACoF,MAAM,UAAS,0CACvB,SAACpF,EAAM,CAACoF,MAAM,cAAa,2CAC3B,SAACpF,EAAM,CAACoF,MAAM,UAAS,sBACvB,SAACpF,EAAM,CAACoF,MAAM,SAAQ,qCACtB,SAACpF,EAAM,CAACoF,MAAM,uBAAsB,mCACpC,SAACpF,EAAM,CAACoF,MAAM,UAAS,sBACvB,SAACpF,EAAM,CAACoF,MAAM,MAAK,qCAK/B,SAAC,IAAG,CAACN,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,eAAeoC,MAAM,iBAAiBC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UAC9E,SAAC,IAAK,CAACC,YAAY,+BAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,cAAcoC,MAAM,uBAAuBC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UACnF,SAAC,IAAK,CAACC,YAAY,gCAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CACNnC,KAAK,gBACLoC,MAAM,iBACNC,MAAO,CACH,CACIC,UAAU,EACVX,QAAS,uCAEb,CACIgB,QAAS,iBACThB,QAAS,mCAEf,UAEF,SAAC,IAAK,CAACY,YAAY,mBAI3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,SAASoC,MAAM,qBAAoB,UAC/C,UAAC,IAAM,CAACQ,KAAK,OAAOL,YAAY,yBAAwB,WACpD,SAAClF,EAAM,CAACoF,MAAM,YAAW,wBACzB,SAACpF,EAAM,CAACoF,MAAM,WAAU,uBACxB,SAACpF,EAAM,CAACoF,MAAM,cAAa,0BAC3B,SAACpF,EAAM,CAACoF,MAAM,UAAS,6BAInC,SAAC,IAAG,CAACN,KAAM,GAAG,UACV,SAAC,SAAS,CACNnC,KAAK,kBACLoC,MAAM,sBACNC,MAAO,CACH,CACIM,QAAS,QACThB,QAAS,0BAEb,CACIkB,UAAW,SAACC,EAAGL,GAAK,YACNM,IAAVN,GAAiC,KAAVA,GAAgB7C,SAAS6C,EAAO,KAAO,EACxDO,QAAQC,UACRD,QAAQE,OAAO,IAAIC,MAAM,0CAA0C,IAEnF,UAEF,SAAC,IAAK,CAACZ,YAAY,mBAMvC,CACIP,MAAO,uBACPC,SACI,UAAC,IAAG,CAACC,OAAQ,GAAG,WACZ,SAAC,IAAG,CAACC,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,mBAAmBoC,MAAM,iBAAiBC,MAAO,CAAC,CAAEC,UAAU,IAAQ,UAClF,UAAC,IAAM,CAACC,YAAY,gBAAe,WAC/B,SAAClF,EAAM,CAACoF,MAAM,WAAU,uBACxB,SAACpF,EAAM,CAACoF,MAAM,aAAY,yBAC1B,SAACpF,EAAM,CAACoF,MAAM,gBAAe,mCAIzC,SAAC,IAAG,CAACN,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,cAAcoC,MAAM,eAAc,UAC9C,SAAC,IAAK,CAACG,YAAY,0CAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,YAAYoC,MAAM,kBAAiB,UAC/C,SAAC,IAAK,CAACG,YAAY,yCAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,gBAAgBoC,MAAM,iBAAgB,UAClD,SAAC,IAAK,CAACG,YAAY,8BAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,mBAAmBoC,MAAM,oBAAmB,UACxD,SAAC,IAAK,CAACG,YAAY,qCAG3B,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,cAAcoC,MAAM,2BAA0B,UAC1D,SAAC7E,EAAQ,CAAC6F,KAAM,EAAGb,YAAY,gCAGvC,SAAC,IAAG,CAACJ,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,YAAYoC,MAAM,mBAAkB,UAChD,SAAC,IAAM,CAACiB,aAAc,kBAAM,CAAK,EAAEC,UAAQ,YACvC,SAAC,KAAM,CAACC,MAAM,SAAC,IAAc,IAAI,6CAI7C,SAAC,IAAG,CAACpB,KAAM,GAAG,UACV,SAAC,SAAS,CAACnC,KAAK,eAAeoC,MAAM,gBAAe,UAChD,SAAC,IAAM,CAACiB,aAAc,kBAAM,CAAK,EAAEG,SAAS,UAAS,UACjD,SAAC,KAAM,CAACD,MAAM,SAAC,IAAc,IAAI,qCAQ7D,OACI,iCACI,SAAC,IAAa,CAAC7I,UAAU,gBAAe,UACpC,gBAAKA,UAAU,kBAAiB,UAC5B,SAAC,IAAI,CAACiC,eAAe,gBAAgBC,WAAW,SAASlC,UAAU,OAAM,UACrE,sDAKZ,SAAC,IAAI,WACD,iBAAKA,UAAU,iBAAgB,WAC3B,SAAC,IAAK,CAACkB,QAASA,EAASlB,UAAU,OAAM,SACpCqH,EAAMjC,KAAI,SAAC2D,EAAMC,GAAK,OACnB,SAACvG,EAAI,CAAa6E,MAAOyB,EAAKzB,OAAnB0B,EAA4B,OAI/C,UAAC,IAAI,CAAC/F,KAAMA,EAAMgG,OAAO,WAAW7F,SAAUA,EAAU8F,aAAa,MAAK,UACrE7B,EAAMjC,KAAI,SAAC+D,EAAMH,GAAK,OACnB,gBAAiBxH,MAAO,CAAEgB,QAASwG,IAAU9H,EAAU,QAAU,QAAS,SACrEiI,EAAK5B,SADAyB,EAEJ,KAGV,iBAAKhJ,UAAU,OAAM,UAChBkB,EAAU,IACP,SAAC,KAAM,CAACM,MAAO,CAAEE,YAAa,GAAK0H,QA/UlD,WAAH,OAASrG,EAAW7B,EAAU,EAAE,EA+UmC,sBAIpDA,EAAUmG,EAAMgC,OAAS,IACtB,SAAC,KAAM,CAACrB,KAAK,UAAUoB,QArVtC,WAAH,OAASrG,EAAW7B,EAAU,EAAE,EAqVuB,kBAIxCA,IAAYmG,EAAMgC,OAAS,IACxB,SAAC,KAAM,CAACrB,KAAK,UAAUsB,SAAS,SAASpG,QAASA,EAAQ,iCAU1F,C","sources":["components/layout-components/PageHeaderAlt.js","components/shared-components/Flex/index.js","views/app-views/apps/youth/register/index.js"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { useRef, useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport { useSelector } from 'react-redux';\nimport { css } from '@emotion/react';\nimport { TEMPLATE, GRAY_SCALE, NAV_TYPE_TOP, MEDIA_QUERIES } from 'constants/ThemeConstant';\n\nexport const PageHeaderAlt = ({children, background, className, overlap}) => {\n\tconst [widthOffset, setWidthOffset] = useState(0)\n\tconst ref = useRef(null);\n\n\tconst navType = useSelector(state => state.theme.navType);\n\tconst currentTheme = useSelector(state => state.theme.currentTheme);\n\n  \tuseEffect(() => {\n\t\tif (navType === NAV_TYPE_TOP) {\n\t\t\tconst windowSize = window.innerWidth\n\t\t\tconst pageHeaderSize = ref.current.offsetWidth\n\t\t\tsetWidthOffset( (windowSize - pageHeaderSize) / 2 )\n\t\t}\n\t}, [navType]);\n\t\n\tconst getStyle = () => {\n\t\tlet style = { backgroundImage: background ? `url(${background})` : 'none' } \n\t\tif (navType === NAV_TYPE_TOP) {\n\t\t\tstyle.marginRight = -widthOffset\n\t\t\tstyle.marginLeft = -widthOffset\n\t\t\tstyle.paddingLeft = 0\n\t\t\tstyle.paddingRight = 0\n\t\t}\n\t\treturn style\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tref={ref}\n\t\t\tcss={css`\n\t\t\t\tbackground-color: ${currentTheme === 'dark' ? '#2f3a50' : GRAY_SCALE.WHITE };\n\t\t\t\tpadding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\n\t\t\t\tmargin-top: -${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\n\t\t\t\tmargin-left: -${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\n\t\t\t\tmargin-right: -${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\n\n\t\t\t\t@media ${MEDIA_QUERIES.MOBILE} {\n\t\t\t\t\tmargin-left: -${TEMPLATE.LAYOUT_CONTENT_GUTTER_SM}px;\n        \t\t\tmargin-right: -${TEMPLATE.LAYOUT_CONTENT_GUTTER_SM}px;\n\t\t\t\t}\n\n\t\t\t\t${overlap ? 'margin-bottom: -4.6875rem;' : ''}\n\t\t\t`}\n\t\t\tclassName={`page-header-alt ${className ? className : ''}`} \n\t\t\tstyle={getStyle()}\n\t\t>\n\t\t\t{navType === NAV_TYPE_TOP ? <div className=\"container\">{children}</div> : <>{children}</>}\n\t\t</div>\n\t)\n}\n\nPageHeaderAlt.propTypes = {\n  \tchildren: PropTypes.node,\n\tbackground: PropTypes.string,\n\tclassName: PropTypes.string,\n\toverlap: PropTypes.bool\n};\n\nexport default PageHeaderAlt;","import styled from '@emotion/styled';\n\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\n\n\tconst baseStyle = {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: justifyContent,\n\t\talignItems: alignItems,\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\n\t}\n\n\tif (flexDirection) {\n\t\tbaseStyle.flexDirection = flexDirection\n\t}\n\n\tif (padding) {\n\t\tbaseStyle.padding = padding\n\t}\n\n\tif (margin) {\n\t\tbaseStyle.margin = margin\n\t}\n\n\treturn {...baseStyle}\n})\n\nexport default Flex\n","import React, { useState } from 'react'\nimport { Form, Input, Button, DatePicker, Select, Card, Steps, Upload, message, Row, Col } from 'antd'\nimport { UploadOutlined } from '@ant-design/icons'\nimport PageHeaderAlt from 'components/layout-components/PageHeaderAlt'\nimport Flex from 'components/shared-components/Flex'\nimport Api from 'services/Api' // 👈 make sure this points to your axios instance\nimport dayjs from 'dayjs'\nimport API from 'services/Api'\n\nconst { Step } = Steps\nconst { Option } = Select\nconst { TextArea } = Input\n\nconst YouthRegistration = () => {\n    const [current, setCurrent] = useState(0)\n    const [form] = Form.useForm()\n    const [loading, setLoading] = useState(false)\n    // const { name } = useParams();\n\n    const next = () => setCurrent(current + 1)\n    const prev = () => setCurrent(current - 1)\n\n    // Ward, location, sub-location, Village\n\n    \n\n    const onFinish = async (values) => {\n        try {\n            setLoading(true)\n\n            // 🧩 Transform form data into the backend’s expected structure\n            const payload = {\n                full_name: values.fullName || '',\n                date_of_birth: values.dob ? dayjs(values.dob).format('YYYY-MM-DD') : null,\n                gender: values.gender || '',\n                national_id: values.nationalId || '',\n                phone: values.phone || '',\n                email: values.email || null,\n                county: values.county || '',\n                sub_county: values.subCounty || '',\n                ward: values.ward || '',\n                village: values.village || 'N/A',\n                location: values.location || 'N/A',\n                sub_location: values.subLocation || 'N/A',\n                // gps_lat: values.gps_lat ? parseFloat(values.gps_lat) : null,\n                // gps_long: values.gps_long ? parseFloat(values.gps_long) : null,\n\n                education: [\n                    {\n                        highest_level: values.educationLevel || '',\n                        field_of_study: values.fieldOfStudy || '',\n                        institution: values.institution || '',\n                        year_completed: values.yearCompleted\n                            ? parseInt(values.yearCompleted)\n                            : null,\n                    },\n                ],\n\n                skills: (values.skills || []).map(skill => ({\n                    name: skill,\n                    proficiency: 'Intermediate',\n                    years_of_experience: values.experienceYears\n                        ? parseInt(values.experienceYears)\n                        : 0,\n                })),\n\n                employment_history: [\n                    {\n                        current_status: values.employmentStatus || '',\n                        company_name: values.companyName || '',\n                        role: values.pastRoles || '',\n                        start_date: values.startDate || null,\n                        end_date: values.endDate || null,\n                        reference_name: values.referenceName || '',\n                        reference_contact: values.referenceContact || '',\n                    },\n                ],\n\n                interests: [\n                    {\n                        interest_area: 'General',\n                        career_goal: values.careerGoals || '',\n                    },\n                ],\n            }\n\n\n            console.log('📦 Sending payload:', payload)\n\n            // 🔥 POST to your backend\n            const response = await API('/youths/', 'POST', payload)\n            message.success('🎉 Youth registered successfully!')\n            console.log('✅ API response:', response.data)\n\n            form.resetFields()\n            setCurrent(0)\n        } catch (error) {\n            console.error('❌ Error submitting youth data:', error)\n            message.error('Failed to register youth. Please check your data.')\n        } finally {\n            setLoading(false)\n        }\n    }\n    const steps = [\n        {\n            title: 'Personal Details',\n            content: (\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item name=\"fullName\" label=\"Full Name\" rules={[{ required: true }]}>\n                            <Input placeholder=\"Enter full name\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"dob\" label=\"Date of Birth\" rules={[{ required: true }]}>\n                            <DatePicker style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"gender\" label=\"Gender\" rules={[{ required: true }]}>\n                            <Select placeholder=\"Select gender\">\n                                <Option value=\"Male\">Male</Option>\n                                <Option value=\"Female\">Female</Option>\n                                <Option value=\"Other\">Other</Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"nationalId\" label=\"National ID\" rules={[{ required: true }]}>\n                            <Input placeholder=\"Enter national ID\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"phone\" label=\"Phone Number\" rules={[{ required: true }]}>\n                            <Input placeholder=\"e.g. 0712345678\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"email\" label=\"Email\" rules={[{\n                            type: 'email', message: 'The input is not valid E-mail!',\n                        }]}>\n                            <Input type=\"email\" placeholder=\"Enter email\" rules={[{ type: 'email', message: 'The input is not valid E-mail!' }]} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            ),\n        },\n        {\n            title: 'Location',\n            content: (\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item name=\"county\" label=\"County\" rules={[{ required: true }]}>\n                            <Input placeholder=\"Enter county\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"subCounty\" label=\"Sub-County\" rules={[{ required: true }]}>\n                            <Input placeholder=\"Enter sub-county\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"ward\" label=\"Ward\" rules={[{ required: true }]}>\n                            <Input placeholder=\"Enter ward\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"location\" label=\"Location\" rules={[{ required: true }]}>\n                            <Input placeholder=\"e.g. -1.28333\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"subLocation\" label=\"Sub-Location\" rules={[{ required: true }]}>\n                            <Input placeholder=\"e.g. -1.28333\" />\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item name=\"village\" label=\"Village\" rules={[{ required: true }]}>\n                            <Input placeholder=\"Enter village\" />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            ),\n        },\n        {\n            title: 'Education & Skills',\n            content: (\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"educationLevel\"\n                            label=\"Highest Education Level\"\n                            rules={[{ required: true }]}\n                        >\n                            <Select placeholder=\"Select level\">\n                                <Option value=\"Pre-Primary\">Pre-Primary</Option>\n                                <Option value=\"Primary\">Primary (KCPE)</Option>\n                                <Option value=\"Secondary\">Secondary (KCSE)</Option>\n                                <Option value=\"Artisan\">Artisan / Craft Certificate</Option>\n                                <Option value=\"Certificate\">Certificate (TVET / College)</Option>\n                                <Option value=\"Diploma\">Diploma</Option>\n                                <Option value=\"Degree\">Degree (Undergraduate)</Option>\n                                <Option value=\"Postgraduate Diploma\">Postgraduate Diploma</Option>\n                                <Option value=\"Masters\">Masters</Option>\n                                <Option value=\"PhD\">PhD / Doctorate</Option>\n                            </Select>\n                        </Form.Item>\n\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"fieldOfStudy\" label=\"Field of Study\" rules={[{ required: true }]}>\n                            <Input placeholder=\"e.g. Computer Science\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"institution\" label=\"Institution Attended\" rules={[{ required: true }]}>\n                            <Input placeholder=\"Enter institution name\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"yearCompleted\"\n                            label=\"Year Completed\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please enter the year of completion',\n                                },\n                                {\n                                    pattern: /^(19|20)\\d{2}$/,\n                                    message: 'Enter a valid year (e.g. 2022)',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"e.g. 2022\" />\n                        </Form.Item>\n\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item name=\"skills\" label=\"Skills & Abilities\">\n                            <Select mode=\"tags\" placeholder=\"Enter or select skills\">\n                                <Option value=\"Carpentry\">Carpentry</Option>\n                                <Option value=\"Plumbing\">Plumbing</Option>\n                                <Option value=\"Programming\">Programming</Option>\n                                <Option value=\"Driving\">Driving</Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"experienceYears\"\n                            label=\"Years of Experience\"\n                            rules={[\n                                {\n                                    pattern: /^\\d*$/,\n                                    message: 'Must be a valid number',\n                                },\n                                {\n                                    validator: (_, value) =>\n                                        value === undefined || value === '' || parseInt(value, 10) >= 0\n                                            ? Promise.resolve()\n                                            : Promise.reject(new Error('Years of experience cannot be negative')),\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"e.g. 2\" />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            ),\n        },\n        {\n            title: 'Employment & Uploads',\n            content: (\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item name=\"employmentStatus\" label=\"Current Status\" rules={[{ required: true }]}>\n                            <Select placeholder=\"Select status\">\n                                <Option value=\"Employed\">Employed</Option>\n                                <Option value=\"Unemployed\">Unemployed</Option>\n                                <Option value=\"Self-employed\">Self-employed</Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"companyName\" label=\"Company Name\">\n                            <Input placeholder=\"Enter company name (if employed)\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"pastRoles\" label=\"Role / Position\">\n                            <Input placeholder=\"e.g. Developer, Sales Assistant\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"referenceName\" label=\"Reference Name\">\n                            <Input placeholder=\"Enter reference name\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"referenceContact\" label=\"Reference Contact\">\n                            <Input placeholder=\"Enter reference phone/email\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item name=\"careerGoals\" label=\"Interests & Career Goals\">\n                            <TextArea rows={3} placeholder=\"Describe your goals...\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"documents\" label=\"Upload Documents\">\n                            <Upload beforeUpload={() => false} multiple>\n                                <Button icon={<UploadOutlined />}>Upload Certificates / CV</Button>\n                            </Upload>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name=\"profilePhoto\" label=\"Profile Photo\">\n                            <Upload beforeUpload={() => false} listType=\"picture\">\n                                <Button icon={<UploadOutlined />}>Upload Photo</Button>\n                            </Upload>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            ),\n        },\n    ]\n    return (\n        <>\n            <PageHeaderAlt className=\"border-bottom\">\n                <div className=\"container-fluid\">\n                    <Flex justifyContent=\"space-between\" alignItems=\"center\" className=\"py-4\">\n                        <h2>Youth Registration</h2>\n                    </Flex>\n                </div>\n            </PageHeaderAlt>\n\n            <Card>\n                <div className=\"container my-5\">\n                    <Steps current={current} className=\"mb-4\">\n                        {steps.map((item, index) => (\n                            <Step key={index} title={item.title} />\n                        ))}\n                    </Steps>\n\n                    <Form form={form} layout=\"vertical\" onFinish={onFinish} autoComplete=\"off\">\n                        {steps.map((step, index) => (\n                            <div key={index} style={{ display: index === current ? 'block' : 'none' }}>\n                                {step.content}\n                            </div>\n                        ))}\n\n                        <div className=\"mt-4\">\n                            {current > 0 && (\n                                <Button style={{ marginRight: 8 }} onClick={prev}>\n                                    Previous\n                                </Button>\n                            )}\n                            {current < steps.length - 1 && (\n                                <Button type=\"primary\" onClick={next}>\n                                    Next\n                                </Button>\n                            )}\n                            {current === steps.length - 1 && (\n                                <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                                    Submit\n                                </Button>\n                            )}\n                        </div>\n                    </Form>\n                </div>\n            </Card>\n        </>\n    )\n}\nexport default YouthRegistration\n"],"names":["children","background","className","overlap","useState","widthOffset","setWidthOffset","ref","useRef","navType","useSelector","state","theme","currentTheme","useEffect","NAV_TYPE_TOP","windowSize","window","innerWidth","pageHeaderSize","current","offsetWidth","css","GRAY_SCALE","TEMPLATE","MEDIA_QUERIES","style","backgroundImage","marginRight","marginLeft","paddingLeft","paddingRight","getStyle","Flex","styled","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","Step","Steps","Option","Select","TextArea","Input","setCurrent","Form","form","loading","setLoading","onFinish","values","payload","full_name","fullName","date_of_birth","dob","dayjs","format","gender","national_id","nationalId","phone","email","county","sub_county","subCounty","ward","village","location","sub_location","subLocation","education","highest_level","educationLevel","field_of_study","fieldOfStudy","institution","year_completed","yearCompleted","parseInt","skills","map","skill","name","proficiency","years_of_experience","experienceYears","employment_history","current_status","employmentStatus","company_name","companyName","role","pastRoles","start_date","startDate","end_date","endDate","reference_name","referenceName","reference_contact","referenceContact","interests","interest_area","career_goal","careerGoals","console","log","API","response","message","data","resetFields","error","steps","title","content","gutter","span","label","rules","required","placeholder","width","value","type","pattern","mode","validator","_","undefined","Promise","resolve","reject","Error","rows","beforeUpload","multiple","icon","listType","item","index","layout","autoComplete","step","onClick","length","htmlType"],"sourceRoot":""}