{"version":3,"file":"static/js/654.ccc6ff7d.chunk.js","mappings":"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","sources":["constants/ChartConstant.js","utils/index.js","components/shared-components/RegiondataWidget/index.js","components/shared-components/DonutChartWidget/index.js","components/shared-components/Card/index.js","components/shared-components/ChartWidget/index.js","views/app-views/dashboards/index.js"],"sourcesContent":["export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { useState } from 'react'\nimport { Card, Row, Col, Badge, Grid } from 'antd';\nimport PropTypes from 'prop-types'\nimport {\n\tComposableMap,\n\tGeographies,\n\tGeography\n} from \"react-simple-maps\";\nimport ReactTooltip from 'react-tooltip'\nimport WorldMap from 'assets/maps/world-countries-sans-antarctica.json'\nimport utils from 'utils'\nimport { useNavigate } from \"react-router-dom\";\nimport { AUTH_PREFIX_PATH, APP_PREFIX_PATH } from 'configs/AppConfig'\n\nconst { useBreakpoint } = Grid;\nconst geoUrl = WorldMap;\nconst mapColor = '#F5F4F6';\nconst hoverPercentage = -10;\n\n\n\nconst getHighlightedRegion = (name, data) => {\n\tif (data.length > 0 || name) {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst elm = data[i];\n\t\t\tif (name === elm.name) {\n\t\t\t\treturn elm.color\n\t\t\t}\n\t\t}\n\t\treturn mapColor\n\t}\n\treturn mapColor\n}\n\nconst getRegionHoverColor = (name, data) => {\n\tif (data.length > 0 || name) {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst elm = data[i];\n\t\t\tif (name === elm.name) {\n\t\t\t\treturn utils.shadeColor(elm.color, hoverPercentage)\n\t\t\t}\n\t\t}\n\t\treturn utils.shadeColor(mapColor, hoverPercentage)\n\t}\n\treturn utils.shadeColor(mapColor, hoverPercentage)\n}\n\nconst getRegionValue = (name, data) => {\n\tif (data.length > 0 || name) {\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst elm = data[i];\n\t\t\tif (name === elm.name) {\n\t\t\t\treturn `${elm.name} — ${elm.value}`\n\t\t\t}\n\t\t}\n\t\treturn ''\n\t}\n\treturn ''\n}\n\nconst MapChart = ({ setTooltipContent, data, mapSource, mapType }) => {\n\treturn (\n\t\t<ComposableMap style={{ transform: `${mapType === 'world' ? 'translateY(20px)' : 'none'}` }} data-tip=\"\" height={380} projectionConfig={{ scale: 145 }}>\n\t\t\t<Geographies geography={mapSource}>\n\t\t\t\t{({ geographies }) =>\n\t\t\t\t\tgeographies.map(geo => {\n\t\t\t\t\t\tconst geoName = mapType === 'world' ? geo.properties.name : geo.properties.NAME_1\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Geography\n\t\t\t\t\t\t\t\tkey={geo.rsmKey}\n\t\t\t\t\t\t\t\tgeography={geo}\n\t\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\t\tsetTooltipContent(getRegionValue(geoName, data));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\t\t\tsetTooltipContent(\"\");\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tfill={getHighlightedRegion(geoName, data)}\n\t\t\t\t\t\t\t\tstroke=\"#D6D6DA\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\t\t\tfill: getRegionHoverColor(geoName, data),\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Geographies>\n\t\t</ComposableMap>\n\t)\n}\n\nconst Map = props => {\n\tconst { data, mapSource, mapType, onWardClick } = props\n\tconst [content, setContent] = useState(\"\")\n\n\treturn (\n\t\t<>\n\t\t\t<MapChart\n\t\t\t\tdata={data}\n\t\t\t\tmapSource={mapSource}\n\t\t\t\tmapType={mapType}\n\t\t\t\tsetTooltipContent={setContent}\n\t\t\t\tonWardClick={onWardClick}\n\t\t\t/>\n\t\t\t<ReactTooltip>{content}</ReactTooltip>\n\t\t</>\n\t)\n}\n\nconst renderDataList = data => {\n\tconst list = data.map(elm => (\n\t\t<div className=\"d-flex align-items-center justify-content-between mb-3\" key={elm.name}>\n\t\t\t<div>\n\t\t\t\t<Badge color={elm.color} />\n\t\t\t\t<span className=\"text-gray-light mx-2\">{elm.name}</span>\n\t\t\t</div>\n\t\t\t<span className=\"font-weight-bold text-dark\">{elm.value}</span>\n\t\t</div>\n\t))\n\treturn list\n}\n\n// export const RegiondataWidget = props => {\n// \tconst { data, mapSource, mapType, title, content, list } = props\n// \tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\n// \treturn (\n// \t\t<Card bodyStyle={{padding: 0}}>\n// \t\t\t<Row>\n// \t\t\t\t<Col xs={24} sm={24} md={24} lg={7} className=\"border-right\">\n// \t\t\t\t\t<div className=\"d-flex flex-column p-3 justify-content-between h-100\">\n// \t\t\t\t\t\t<div>{title && <h4 className=\"font-weight-bold\">{title}</h4>}</div>\n// \t\t\t\t\t\t<div>{content}</div>\n// \t\t\t\t\t\t<div>{list ? list : renderDataList(data)}</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</Col>\n// \t\t\t\t<Col xs={24} sm={24} md={24} lg={17}>\n// \t\t\t\t\t<div className=\"d-flex flex-column justify-content-center\" style={{minHeight: isMobile ? 200 : 435 }}>\n// \t\t\t\t\t\t<div className=\"p-3 w-100\" >\n// \t\t\t\t\t\t\t<Map data={data} mapSource={mapSource} mapType={mapType}/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</Col>\n// \t\t\t</Row>\n// \t\t</Card>\n// \t)\n// }\nexport const RegiondataWidget = props => {\n\tconst { data, mapSource, mapType, title, content, list, onWardClick } = props\n\n\tconsole.log('RegiondataWidget data:', data)\n\n\tconst navigate = useNavigate();\n\n\tconst renderClickableList = (data) => (\n\t\t<ul className=\"list-unstyled\">\n\t\t\t{data.map((item, i) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={i}\n\t\t\t\t\tclassName=\"cursor-pointer text-primary\"\n\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\tonClick={() => navigate(`${APP_PREFIX_PATH}/apps/youth/register/${item.name}`)} // 🚀 Redirect activated\n\t\t\t\t>\n\t\t\t\t\t{item.name} — {item.value}\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n\n\n\treturn (\n\t\t<Card bodyStyle={{ padding: 0 }}>\n\t\t\t<Row>\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={7} className=\"border-right\">\n\t\t\t\t\t<div className=\"d-flex flex-column p-3 justify-content-between h-100\">\n\t\t\t\t\t\t<div>{title && <h4 className=\"font-weight-bold\">{title}</h4>}</div>\n\t\t\t\t\t\t<div>{content}</div>\n\t\t\t\t\t\t<div>{list ? list : renderClickableList(data)}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={17}>\n\t\t\t\t\t<div className=\"d-flex flex-column justify-content-center\" style={{ minHeight: 435 }}>\n\t\t\t\t\t\t<div className=\"p-3 w-100\">\n\t\t\t\t\t\t\t<Map data={data} mapSource={mapSource} mapType={mapType} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Card>\n\t)\n}\n\n\nRegiondataWidget.propTypes = {\n\ttitle: PropTypes.string,\n\tdata: PropTypes.array,\n\tmapSource: PropTypes.object,\n\tmapType: PropTypes.string,\n\tcontent: PropTypes.element,\n\tlist: PropTypes.element\n}\n\nRegiondataWidget.defaultProps = {\n\tdata: [],\n\tmapSource: geoUrl,\n\tmapType: 'world'\n};\n\nexport default RegiondataWidget","import React from 'react'\nimport { Card } from 'antd';\nimport ApexChart from \"react-apexcharts\";\nimport { apexPieChartDefaultOption } from 'constants/ChartConstant';\nimport PropTypes from 'prop-types'\n\nconst defaultOption = apexPieChartDefaultOption;\n\nconst Chart = props => {\n\treturn (\n\t\t<ApexChart {...props} />\n\t)\n}\n\nconst DonutChartWidget = props => {\n\tconst { series, customOptions, labels, width, height, title, extra, bodyClass } = props\n\tlet options = JSON.parse(JSON.stringify(defaultOption))\n\toptions.labels = labels\n\toptions.plotOptions.pie.donut.labels.total.label = title\n\tif(!title) {\n\t\toptions.plotOptions.pie.donut.labels.show = false\n\t}\n\tif(customOptions) {\n\t\toptions = {...options, ...customOptions }\n\t}\n\treturn (\n\t\t<Card>\n\t\t\t<div className={`text-center ${bodyClass}`}>\n\t\t\t\t<Chart type=\"donut\" options={options} series={series} width={width} height={height} />\n\t\t\t\t{extra}\n\t\t\t</div>\n\t\t</Card>\n\t)\n}\n\nDonutChartWidget.propTypes = {\n\tseries: PropTypes.array.isRequired,\n\tlabels: PropTypes.array,\n\ttitle: PropTypes.string,\n\textra: PropTypes.element,\n\tbodyClass: PropTypes.string\n}\n\nDonutChartWidget.defaultProps = {\n\tseries: [],\n\tlabels: [],\n\ttitle: '',\n\theight: 250,\n\twidth: '100%'\n};\n\nexport default DonutChartWidget\n","import { Card as AntdCard } from 'antd';\n\n\nconst Card = ({style, ...rest}) => {\n    return (\n        <AntdCard style={{ marginBottom: 20 }} {...rest} />\n    )\n}\n\nexport default Card","import React, { useRef, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Card from 'components/shared-components/Card';\nimport ApexChart from \"react-apexcharts\";\nimport { \n\tapexLineChartDefaultOption, \n\tapexBarChartDefaultOption,\n\tapexAreaChartDefaultOption\n} from 'constants/ChartConstant';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { DIR_RTL } from 'constants/ThemeConstant';\n\nconst titleStyle = {\n\tposition: 'absolute',\n\tzIndex: '1'\n}\n\nconst extraStyle ={\n\tposition: 'absolute',\n\tzIndex: '1',\n\tright: '0',\n\ttop: '-2px'\n}\n\nconst getChartTypeDefaultOption = type => {\n\tswitch (type) {\n\t\tcase 'line':\n\t\t\treturn apexLineChartDefaultOption\n\t\tcase 'bar':\n\t\t\treturn apexBarChartDefaultOption\n\t\tcase 'area':\n\t\t\treturn apexAreaChartDefaultOption\n\t\tdefault:\n\t\t\treturn apexLineChartDefaultOption;\n\t}\n}\n\nconst ChartWidget = ({title, series, width, height, xAxis, customOptions, card, type, extra, direction, bodyClass}) =>  {\n\tlet options = JSON.parse(JSON.stringify(getChartTypeDefaultOption(type)))\n\tconst isMobile = window.innerWidth < 768 \n\tconst setLegendOffset = () => {\n\t\tif(chartRef.current) {\n\t\t\tconst lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0]\n\t\t\tlengend.style.marginRight = `${isMobile ? 0 : extraRef.current?.offsetWidth}px`\n\t\t\tif(direction === DIR_RTL) {\n\t\t\t\tlengend.style.right = 'auto'\n\t\t\t\tlengend.style.left = '0'\n\t\t\t}\n\t\t\tif (isMobile) {\n\t\t\t\tlengend.style.position = 'relative'\n\t\t\t\tlengend.style.top = 0\n\t\t\t\tlengend.style.justifyContent = 'start';\n\t\t\t\tlengend.style.padding = 0;\n\t\t\t}\n\t\t}\n\t} \n\n\tuseEffect(() => {\n\t\tsetLegendOffset()\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\t\n\tconst extraRef = useRef(null);\n\tconst chartRef = useRef();\n\t\n\toptions.xaxis.categories = xAxis\n\tif(customOptions) {\n\t\toptions = {...options, ...customOptions }\n\t}\n\t\n\tconst onResize = () => {\n\t\tsetTimeout(() => {\n\t\t\tsetLegendOffset()\t\n\t\t}, 600);\n\t}\n\n\tconst { ref: resizeRef } = useResizeDetector({\n\t\tonResize: () => {\n\t\t\tonResize()\n\t\t}\n\t});\n\n\tconst renderChart = () => (\n\t\t<div ref={resizeRef}>\n\t\t\t<div style={direction === DIR_RTL ? {direction: 'ltr'}: {}} className=\"chartRef\" ref={chartRef}>\n\t\t\t\t<ApexChart options={options} type={type} series={series} width={width} height={height}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t{card ? \n\t\t\t\t<Card >\n\t\t\t\t\t<div className={`position-relative ${bodyClass}`}>\n\t\t\t\t\t\t{<div style={!isMobile ? titleStyle : {}}>{title}</div> && <h4 className=\"font-weight-bold\" style={!isMobile ? titleStyle : {}}>{title}</h4>}\n\t\t\t\t\t\t{extra && <div ref={extraRef} style={!isMobile ? extraStyle : {}}>{extra}</div>}\n\t\t\t\t\t\t{renderChart()}\n\t\t\t\t\t</div>\n\t\t\t\t</Card> \n\t\t\t\t: \n\t\t\t\trenderChart()\n\t\t\t}\n\t\t</>\n\t)\n}\n\nChartWidget.propTypes = {\n\ttitle: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.element\n\t]),\n\tseries: PropTypes.array.isRequired,\n\txAxis: PropTypes.array,\n\tcustomOptions: PropTypes.object,\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number\n\t]),\n\theight: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number\n\t]),\n\tcard: PropTypes.bool,\n\ttype: PropTypes.string,\n\textra: PropTypes.element,\n\tbodyClass: PropTypes.string\n}\n\nChartWidget.defaultProps = {\n\tseries: [],\n\theight: 300,\n\twidth: '100%',\n\tcard: true,\n\ttype: 'line'\n};\n\nexport default ChartWidget\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, Statistic, Tag, Select, Empty } from 'antd';\r\nimport RegiondataWidget from 'components/shared-components/RegiondataWidget';\r\nimport DonutChartWidget from 'components/shared-components/DonutChartWidget';\r\nimport ChartWidget from 'components/shared-components/ChartWidget';\r\nimport { COLORS } from 'constants/ChartConstant';\r\nimport { useSelector } from 'react-redux';\r\nimport API from 'services/Api';\r\n\r\nconst { Option } = Select;\r\n\r\nexport const YouthDashboard = () => {\r\n  const [regionData, setRegionData] = useState([]);\r\n  const [summary, setSummary] = useState({});\r\n  const [genderData, setGenderData] = useState([]);\r\n  const [employmentData, setEmploymentData] = useState([]);\r\n  const { direction } = useSelector(state => state.theme);\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const res = await API('summaries/', 'GET', []);\r\n        const data = res.data;\r\n\r\n        // 🌍 Region data\r\n        setRegionData(data.region_data || []);\r\n        setSummary({\r\n          top_region: data.top_region || 'N/A',\r\n          top_region_count: data.top_region_count || 0,\r\n        });\r\n\r\n        // 🧍 Gender summary (fetch or compute via separate API if needed)\r\n        const genderRes = await API('summaries/gender/', 'GET', []);\r\n        setGenderData(genderRes.data || []);\r\n\r\n        // 💼 Employment summary\r\n        const empRes = await API('summaries/employment/', 'GET', []);\r\n        setEmploymentData(empRes.data || []);\r\n      } catch (err) {\r\n        console.error('Dashboard data fetch error:', err);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* HEADER SUMMARY */}\r\n      <Row gutter={16}>\r\n        <Col span={8}>\r\n          <Card>\r\n            <Statistic\r\n              title=\"Top Registration Ward\"\r\n              value={summary.top_region}\r\n              valueStyle={{ color: COLORS[0], fontWeight: 600 }}\r\n            />\r\n            <Tag color=\"blue\" className=\"mt-2\">\r\n              {summary.top_region_count} Youths\r\n            </Tag>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col span={8}>\r\n          <Card>\r\n            <Statistic\r\n              title=\"Total Registered Youths\"\r\n              value={regionData.reduce((acc, curr) => acc + curr.value, 0)}\r\n              valueStyle={{ color: COLORS[1], fontWeight: 600 }}\r\n            />\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col span={8}>\r\n          <Card>\r\n            <Statistic\r\n              title=\"Regions Covered\"\r\n              value={regionData.length}\r\n              valueStyle={{ color: COLORS[2], fontWeight: 600 }}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* REGION DISTRIBUTION */}\r\n      <Row gutter={16} className=\"mt-4\">\r\n        <Col xs={24} sm={24} md={24} lg={16}>\r\n          <RegiondataWidget\r\n            title=\"Youth Registrations by Ward\"\r\n            data={regionData}\r\n          />\r\n\r\n        </Col>\r\n\r\n        {/* GENDER DISTRIBUTION */}\r\n        <Col xs={24} sm={24} md={24} lg={8}>\r\n          <DonutChartWidget\r\n            series={genderData.map(g => g.count)}\r\n            labels={genderData.map(g => g.gender)}\r\n            title=\"Gender Distribution\"\r\n            bodyClass=\"my-3\"\r\n            customOptions={{ colors: [COLORS[0], COLORS[1], COLORS[2]] }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* EMPLOYMENT STATUS CHART */}\r\n      <Row gutter={16} className=\"mt-4\">\r\n        <Col span={24}>\r\n          {employmentData.length > 0 ? (\r\n            <ChartWidget\r\n              series={[\r\n                {\r\n                  name: 'Count',\r\n                  data: employmentData.map(e => e.count),\r\n                },\r\n              ]}\r\n              xAxis={employmentData.map(e => e.status)}\r\n              title=\"Employment Status Distribution\"\r\n              height={400}\r\n              type=\"bar\"\r\n              direction={direction}\r\n              customOptions={{\r\n                colors: [COLORS[3]],\r\n                plotOptions: { bar: { horizontal: false, borderRadius: 4 } },\r\n              }}\r\n            />\r\n          ) : (\r\n            <Empty description=\"No employment data yet\" />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default YouthDashboard;\r\n"],"names":["COLOR_1","COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexAreaChartDefaultOption","apexBarChartDefaultOption","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","apexPieChartDefaultOption","pie","size","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","color","seriesTotals","reduce","a","b","Utils","name","initials","match","shift","pop","toUpperCase","navTree","path","route","p","hasOwnProperty","this","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","key","toLowerCase","list","value","data","filter","item","input","searchText","screens","breakpoints","push","mapColor","Grid","getHighlightedRegion","elm","getRegionHoverColor","utils","MapChart","setTooltipContent","mapSource","mapType","ComposableMap","style","transform","height","projectionConfig","scale","Geographies","geography","geographies","map","geo","geoName","properties","NAME_1","Geography","onMouseEnter","getRegionValue","onMouseLeave","hover","outline","rsmKey","Map","props","onWardClick","useState","content","setContent","RegiondataWidget","title","console","log","navigate","useNavigate","bodyStyle","padding","xs","sm","md","lg","className","cursor","onClick","APP_PREFIX_PATH","renderClickableList","minHeight","defaultProps","WorldMap","defaultOption","Chart","DonutChartWidget","customOptions","extra","bodyClass","options","JSON","parse","stringify","type","rest","marginBottom","titleStyle","zIndex","extraStyle","right","top","ChartWidget","xAxis","card","direction","getChartTypeDefaultOption","isMobile","window","innerWidth","setLegendOffset","chartRef","current","lengend","querySelectorAll","marginRight","extraRef","offsetWidth","DIR_RTL","left","justifyContent","useEffect","useRef","resizeRef","useResizeDetector","onResize","setTimeout","ref","renderChart","YouthDashboard","Select","regionData","setRegionData","summary","setSummary","genderData","setGenderData","employmentData","setEmploymentData","useSelector","state","theme","fetchSummary","API","res","region_data","top_region","top_region_count","genderRes","empRes","error","gutter","span","valueStyle","acc","curr","count","gender","e","status","borderRadius","description"],"sourceRoot":""}