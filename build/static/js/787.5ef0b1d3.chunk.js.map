{"version":3,"file":"static/js/787.5ef0b1d3.chunk.js","mappings":"0TAcaA,EAAY,SAACC,GACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCC,EAAO,KAAEC,EAAU,KAGxBC,EAYEN,EAZFM,mBACAC,EAWEP,EAXFO,gBACAC,EAUER,EAVFQ,sBACAC,EASET,EATFS,YACAC,EAQEV,EARFU,MACAC,EAOEX,EAPFW,OACAC,EAMEZ,EANFY,MACAC,EAKEb,EALFa,QACAC,EAIEd,EAJFc,SACAC,EAGEf,EAHFe,YACAC,EAEEhB,EAFFgB,QAAQ,EAENhB,EADFiB,cAAAA,OAAa,OAAO,EA+BtB,OAdAC,EAAAA,EAAAA,YAAU,WAMR,GAJc,OAAVN,GAAkBK,GACpBhB,EAASa,GAGPC,EAAa,CACf,IAAMI,EAAQC,YAAW,kBAAMb,GAAiB,GAAE,KAClD,OAAO,WACLc,aAAaF,EACf,CACF,CACF,GAAG,CAACJ,EAAaH,EAAOE,EAAUG,EAAehB,EAAUM,KAGzD,iCACE,SAAC,SAAU,CACTe,QAAS,CAAEC,QAAS,EAAGC,aAAc,GACrCC,QAAS,CACPF,QAASR,EAAc,EAAI,EAC3BS,aAAcT,EAAc,GAAK,GACjC,UAEF,SAAC,IAAK,CACJW,KAAMtB,EAAU,OAAS,QACzBuB,UAAQ,EACRX,QAASA,OAGb,UAAC,IAAI,CACHY,OAAO,WACPC,KAAK,aAELC,SA/CU,SAACC,GACftB,IACAE,EAAOoB,GAAQC,MAAK,SAACC,GAEA,6BAAjBA,EAAKC,SACY,+BAAjBD,EAAKC,QAEL7B,GAAW,GAEXA,GAAW,EAEf,GACF,EAmCwB,WAElB,SAAC,SAAS,CACRwB,KAAK,QACLM,MAAM,QACNC,MAAO,CACL,CACEC,UAAU,EACVrB,QAAS,2BAEX,CACEU,KAAM,QACNV,QAAS,mCAEX,UAEF,SAAC,IAAK,CAACsB,QAAQ,SAACC,EAAA,EAAY,CAACC,UAAU,sBAEzC,SAAC,SAAS,CACRX,KAAK,WACLM,OACE,iBACEK,UAAS,UACPlC,EACI,0DACA,IACH,WAEH,uCACCA,IACC,iBACEmC,QAAS,kBAAMjC,CAAqB,EACpCgC,UAAU,4DAA2D,iCAO7EJ,MAAO,CACL,CACEC,UAAU,EACVrB,QAAS,+BAEX,UAEF,SAAC,aAAc,CAACsB,QAAQ,SAACI,EAAA,EAAY,CAACF,UAAU,qBAIjDpC,IACC,SAAC,SAAS,CACRyB,KAAK,MACLM,MAAM,MACNC,MAAO,CACL,CACEC,UAAU,EACVrB,QAAS,yBAEX,CACE2B,IAAK,EACL3B,QAAS,yBAEX,UAEF,SAAC,IAAK,CACJsB,QAAQ,SAACM,EAAA,EAAW,CAACJ,UAAU,iBAC/BK,YAAY,sBAKlB,SAAC,SAAS,WACR,SAAC,KAAM,CAACnB,KAAK,UAAUoB,SAAS,SAASC,OAAK,EAAClC,QAASA,EAAQ,uBAKjEH,GACD,SAAC,IAAG,WACF,SAAC,IAAG,CAACsC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG,UAC1B,cAAGC,KAAK,wBAAuB,mCAInC,gBAAKX,UAAU,mBAAkB,UAC/B,cAAGA,UAAU,OAAM,4CAK7B,EAQAzC,EAAUqD,aAAe,CACvBC,aAAa,EACb/C,oBAAoB,GAGtB,IAKMgD,EAAqB,CACzB3C,OAAAA,EAAAA,GACA4C,gBAAAA,EAAAA,GACA9C,YAAAA,EAAAA,GACAF,gBAAAA,EAAAA,IAGF,GAAeiD,EAAAA,EAAAA,KAZS,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KAEzB,MAAO,CAAE5C,QADkD4C,EAAnD5C,QACUG,QADyCyC,EAA1CzC,QACUD,YADgC0C,EAAjC1C,YACcH,MADmB6C,EAApB7C,MACQE,SADY2C,EAAb3C,SAEhD,GASwCwC,EAAxC,CAA4DvD,G,UC/LtD2D,EAAkB,CACtBC,gBAAiB,+BACjBC,iBAAkB,YAClBC,eAAgB,SAoClB,EAjCc,SAAC7D,GACb,IAAM8D,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,MAAMG,YAAY,IAC7D,OACE,gBAAKzB,UAAU,QAAQ0B,MAAOR,EAAgB,UAC5C,gBAAKlB,UAAU,4DAA2D,UACxE,SAAC,IAAG,CAAC2B,QAAQ,SAAQ,UACnB,SAAC,IAAG,CAACC,GAAI,GAAIpB,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAE,UACjC,SAAC,IAAI,WACH,iBAAKV,UAAU,OAAM,WACnB,gBAAKA,UAAU,cAAa,UAC1B,gBACEA,UAAU,YACV6B,IAAG,eACS,UAAVP,EAAoB,WAAa,kBAEnCQ,IAAI,QAIR,SAAC,IAAG,CAACH,QAAQ,SAAQ,UACnB,SAAC,IAAG,CAACC,GAAI,GAAIpB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG,UAClC,SAAC,GAAS,UAAKlD,oBAUnC,C","sources":["views/auth-views/components/LoginForm.js","views/auth-views/authentication/login/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, Input, Alert, Row, Col } from \"antd\";\nimport { MailOutlined, LockOutlined, KeyOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport {\n  signIn,\n  showLoading,\n  showAuthMessage,\n  hideAuthMessage,\n} from \"store/slices/authSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nexport const LoginForm = (props) => {\n  const navigate = useNavigate();\n  const [needOTP, setNeedOTP] = useState(false);\n\n  const {\n    showForgetPassword,\n    hideAuthMessage,\n    onForgetPasswordClick,\n    showLoading,\n    extra,\n    signIn,\n    token,\n    loading,\n    redirect,\n    showMessage,\n    message,\n    allowRedirect = true,\n  } = props;\n\n  const onLogin = (values) => {\n    showLoading();\n    signIn(values).then((data) => {\n      if (\n        data.payload === \"OTP sent. Please verify.\" ||\n        data.payload === \"Login failed. Invalid OTP.\"\n      ) {\n        setNeedOTP(true);\n      } else {\n        setNeedOTP(false);\n      }\n    });\n  };\n\n  useEffect(() => {\n    // console.log('recieved token', token)\n    if (token !== null && allowRedirect) {\n      navigate(redirect);\n    }\n\n    if (showMessage) {\n      const timer = setTimeout(() => hideAuthMessage(), 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [showMessage, token, redirect, allowRedirect, navigate, hideAuthMessage]);\n\n  return (\n    <>\n      <motion.div\n        initial={{ opacity: 0, marginBottom: 0 }}\n        animate={{\n          opacity: showMessage ? 1 : 0,\n          marginBottom: showMessage ? 20 : 0,\n        }}\n      >\n        <Alert\n          type={needOTP ? \"info\" : \"error\"}\n          showIcon\n          message={message}\n        ></Alert>\n      </motion.div>\n      <Form\n        layout=\"vertical\"\n        name=\"login-form\"\n        // initialValues={initialCredential}\n        onFinish={onLogin}\n      >\n        <Form.Item\n          name=\"email\"\n          label=\"Email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your email\",\n            },\n            {\n              type: \"email\",\n              message: \"Please enter a validate email!\",\n            },\n          ]}\n        >\n          <Input prefix={<MailOutlined className=\"text-primary\" />} />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label={\n            <div\n              className={`${\n                showForgetPassword\n                  ? \"d-flex justify-content-between w-100 align-items-center\"\n                  : \"\"\n              }`}\n            >\n              <span>Password</span>\n              {showForgetPassword && (\n                <span\n                  onClick={() => onForgetPasswordClick}\n                  className=\"cursor-pointer font-size-sm font-weight-normal text-muted\"\n                >\n                  Forget Password?\n                </span>\n              )}\n            </div>\n          }\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password\",\n            },\n          ]}\n        >\n          <Input.Password prefix={<LockOutlined className=\"text-primary\" />} />\n        </Form.Item>\n\n        {/* Conditional OTP input field */}\n        {needOTP && (\n          <Form.Item\n            name=\"otp\"\n            label=\"OTP\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your OTP\",\n              },\n              {\n                len: 6, // Assuming OTP is a 6-digit code\n                message: \"OTP must be 6 digits\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<KeyOutlined className=\"text-primary\" />}\n              placeholder=\"Enter your OTP\"\n            />\n          </Form.Item>\n        )}\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\n            Sign In\n          </Button>\n        </Form.Item>\n\n        {extra}\n        <Row>\n          <Col sm={24} md={24} lg={12}>\n            <a href=\"/auth/forgot-password\">Forgot Password?</a>\n          </Col>\n        </Row>\n        {/* Logo Section */}\n        <div className=\"text-center mt-4\">\n          <p className=\"mt-2\">Powered by HBL TecServe</p>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nLoginForm.propTypes = {\n  otherSignIn: PropTypes.bool,\n  showForgetPassword: PropTypes.bool,\n  extra: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n\nLoginForm.defaultProps = {\n  otherSignIn: true,\n  showForgetPassword: false,\n};\n\nconst mapStateToProps = ({ auth }) => {\n  const { loading, message, showMessage, token, redirect } = auth;\n  return { loading, message, showMessage, token, redirect };\n};\n\nconst mapDispatchToProps = {\n  signIn,\n  showAuthMessage,\n  showLoading,\n  hideAuthMessage,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import React from \"react\";\nimport LoginForm from \"../../components/LoginForm\";\nimport { Card, Row, Col } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nconst backgroundStyle = {\n  backgroundImage: \"url(/img/others/4009301.jpg)\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n};\n\nconst Login = (props) => {\n  const theme = useSelector((state) => state.theme.currentTheme);\n  return (\n    <div className=\"h-100\" style={backgroundStyle}>\n      <div className=\"container d-flex flex-column justify-content-center h-100\">\n        <Row justify=\"center\">\n          <Col xs={20} sm={20} md={20} lg={7}>\n            <Card>\n              <div className=\"my-4\">\n                <div className=\"text-center\">\n                  <img\n                    className=\"img-fluid\"\n                    src={`/img/${\n                      theme === \"light\" ? \"logo.png\" : \"logo-white.png\"\n                    }`}\n                    alt=\"\"\n                  />\n                  {/* <p>Don't have an account yet? <a href=\"/auth/register\">Sign Up</a></p> */}\n                </div>\n                <Row justify=\"center\">\n                  <Col xs={24} sm={24} md={20} lg={20}>\n                    <LoginForm {...props} />\n                  </Col>\n                </Row>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["LoginForm","props","navigate","useNavigate","useState","needOTP","setNeedOTP","showForgetPassword","hideAuthMessage","onForgetPasswordClick","showLoading","extra","signIn","token","loading","redirect","showMessage","message","allowRedirect","useEffect","timer","setTimeout","clearTimeout","initial","opacity","marginBottom","animate","type","showIcon","layout","name","onFinish","values","then","data","payload","label","rules","required","prefix","MailOutlined","className","onClick","LockOutlined","len","KeyOutlined","placeholder","htmlType","block","sm","md","lg","href","defaultProps","otherSignIn","mapDispatchToProps","showAuthMessage","connect","auth","backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","theme","useSelector","state","currentTheme","style","justify","xs","src","alt"],"sourceRoot":""}