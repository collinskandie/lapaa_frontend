{"version":3,"file":"static/js/998.3372ebc4.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","views/app-views/pages/setting/Billing.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavItem.js","components/layout-components/NavProfile.js","components/layout-components/HeaderNav/Header.js","components/layout-components/HeaderNav/HeaderWrapper.js","components/layout-components/HeaderNav/Nav.js","components/layout-components/HeaderNav/NavEdge.js","components/layout-components/HeaderNav/index.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","layouts/AppLayout.js","layouts/inner-app-layout/index.js","utils/index.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\n\n\tconst baseStyle = {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: justifyContent,\n\t\talignItems: alignItems,\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\n\t}\n\n\tif (flexDirection) {\n\t\tbaseStyle.flexDirection = flexDirection\n\t}\n\n\tif (padding) {\n\t\tbaseStyle.padding = padding\n\t}\n\n\tif (margin) {\n\t\tbaseStyle.margin = margin\n\t}\n\n\treturn {...baseStyle}\n})\n\nexport default Flex\n","import React from 'react';\nimport { useTranslation } from 'react-i18next'\n\nconst IntlMessage = ({ id, fallback }) => {\n\n\tconst { t } = useTranslation()\n\n\tconst translate = t(id, fallback)\n\n\treturn <>{translate}</>\n}\n\nexport default IntlMessage;\n","import React, { Component } from 'react'\n\nexport class Icon extends Component {\n\trender() {\n\t\tconst { type, className  } = this.props;\n\t\treturn (\n\t\t\t<>{React.createElement(type, { className: className })}</>\n\t\t)\n\t}\n}\n\nexport default Icon\n","import {\r\n  DashboardOutlined,\r\n  AppstoreOutlined,\r\n  PieChartOutlined,\r\n  EnvironmentOutlined,\r\n  AntDesignOutlined,\r\n  DotChartOutlined,\r\n  InfoCircleOutlined,\r\n  CompassOutlined,\r\n  LayoutOutlined,\r\n  DesktopOutlined,\r\n  FileDoneOutlined,\r\n  CommentOutlined,\r\n  RobotOutlined,\r\n  TeamOutlined,\r\n  AuditOutlined,\r\n  BookOutlined,\r\n  FileUnknownOutlined,\r\n  ProfileOutlined,\r\n  SettingOutlined,\r\n  UserOutlined,\r\n  UsergroupAddOutlined,\r\n  SolutionOutlined,\r\n  MobileOutlined,\r\n\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\nimport Setting from 'views/app-views/pages/setting';\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'dashboards',\r\n  path: `${APP_PREFIX_PATH}/dashboards`,\r\n  title: 'sidenav.dashboard',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  submenu: [\r\n\r\n    {\r\n      key: 'dashboards-analytic',\r\n      path: `${APP_PREFIX_PATH}/dashboards/analytic`,\r\n      title: 'sidenav.dashboard.analytic',\r\n      icon: DotChartOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n\r\n  ]\r\n}]\r\n\r\nconst appsNavTree = [{\r\n  key: 'apps',\r\n  path: `${APP_PREFIX_PATH}/apps`,\r\n  title: 'sidenav.apps',\r\n  icon: AppstoreOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  submenu: [\r\n    {\r\n      key: 'apps-youth-list',\r\n      path: `${APP_PREFIX_PATH}/apps/youth/list`,\r\n      title: 'sidenav.apps.youth.list',\r\n      icon: TeamOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'apps-companies-list',\r\n      path: `${APP_PREFIX_PATH}/apps/companies/list`,\r\n      title: 'sidenav.apps.companies.list',\r\n      icon: AuditOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'apps-reports-list',\r\n      path: `${APP_PREFIX_PATH}/apps/reports/list`,\r\n      title: 'sidenav.apps.reports.list',\r\n      icon: AuditOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n\r\n  ]\r\n}]\r\nconst componentsNavTree = [\r\n  {\r\n    key: 'components',\r\n    path: `${APP_PREFIX_PATH}/components`,\r\n    title: 'sidenav.components',\r\n    icon: AntDesignOutlined,\r\n    breadcrumb: true,\r\n    isGroupTitle: true,\r\n    submenu: [\r\n      {\r\n        key: 'components-general',\r\n        path: `${APP_PREFIX_PATH}/components/general`,\r\n        title: 'sidenav.components.general',\r\n        icon: InfoCircleOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-general-button',\r\n            path: `${APP_PREFIX_PATH}/components/general/button`,\r\n            title: 'sidenav.components.general.button',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-general-icon',\r\n            path: `${APP_PREFIX_PATH}/components/general/icon`,\r\n            title: 'sidenav.components.general.icon',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-general-typography',\r\n            path: `${APP_PREFIX_PATH}/components/general/typography`,\r\n            title: 'sidenav.components.general.typography',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        key: 'components-layout',\r\n        path: `${APP_PREFIX_PATH}/components/layout`,\r\n        title: 'sidenav.components.layout',\r\n        icon: LayoutOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-layout-grid',\r\n            path: `${APP_PREFIX_PATH}/components/layout/grid`,\r\n            title: 'sidenav.components.layout.grid',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-layout-layout',\r\n            path: `${APP_PREFIX_PATH}/components/layout/layout`,\r\n            title: 'sidenav.components.layout.layout',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        key: 'components-navigation',\r\n        path: `${APP_PREFIX_PATH}/components/navigation`,\r\n        title: 'sidenav.components.navigation',\r\n        icon: CompassOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-navigation-affix',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/affix`,\r\n            title: 'sidenav.components.navigation.affix',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-navigation-breadcrumb',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/breadcrumb`,\r\n            title: 'sidenav.components.navigation.breadcrumb',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-navigation-dropdown',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/dropdown`,\r\n            title: 'sidenav.components.navigation.dropdown',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-navigation-menu',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/menu`,\r\n            title: 'sidenav.components.navigation.menu',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-navigation-pagination',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/pagination`,\r\n            title: 'sidenav.components.navigation.pagination',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-navigation-steps',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/steps`,\r\n            title: 'sidenav.components.navigation.steps',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        key: 'components-data-entry',\r\n        path: `${APP_PREFIX_PATH}/components/data-entry`,\r\n        title: 'sidenav.components.dataEntry',\r\n        icon: FileDoneOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-data-entry-auto-complete',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/auto-complete`,\r\n            title: 'sidenav.components.dataEntry.autoComplete',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-checkbox',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/checkbox`,\r\n            title: 'sidenav.components.dataEntry.checkbox',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-cascader',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/cascader`,\r\n            title: 'sidenav.components.dataEntry.cascader',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-date-picker',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/date-picker`,\r\n            title: 'sidenav.components.dataEntry.datePicker',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-form',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/form`,\r\n            title: 'sidenav.components.dataEntry.form',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-input-number',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/input-number`,\r\n            title: 'sidenav.components.dataEntry.inputNumber',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-input',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/input`,\r\n            title: 'sidenav.components.dataEntry.input',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-mentions',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/mentions`,\r\n            title: 'sidenav.components.dataEntry.mentions',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-rate',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/rate`,\r\n            title: 'sidenav.components.dataEntry.rate',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-radio',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/radio`,\r\n            title: 'sidenav.components.dataEntry.radio',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-switch',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/switch`,\r\n            title: 'sidenav.components.dataEntry.switch',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-slider',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/slider`,\r\n            title: 'sidenav.components.dataEntry.slider',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-select',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/select`,\r\n            title: 'sidenav.components.dataEntry.select',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-tree-select',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/tree-select`,\r\n            title: 'sidenav.components.dataEntry.treeSelect',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-transfer',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/transfer`,\r\n            title: 'sidenav.components.dataEntry.transfer',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-time-picker',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/time-picker`,\r\n            title: 'sidenav.components.dataEntry.timePicker',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-entry-upload',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/upload`,\r\n            title: 'sidenav.components.dataEntry.upload',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        key: 'components-data-display',\r\n        path: `${APP_PREFIX_PATH}/components/data-display`,\r\n        title: 'sidenav.components.dataDisplay',\r\n        icon: DesktopOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-data-display-avatar',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/avatar`,\r\n            title: 'sidenav.components.dataDisplay.avatar',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-badge',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/badge`,\r\n            title: 'sidenav.components.dataDisplay.badge',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-collapse',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/collapse`,\r\n            title: 'sidenav.components.dataDisplay.collapse',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-carousel',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/carousel`,\r\n            title: 'sidenav.components.dataDisplay.carousel',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-card',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/card`,\r\n            title: 'sidenav.components.dataDisplay.card',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-calendar',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/calendar`,\r\n            title: 'sidenav.components.dataDisplay.calendar',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-descriptions',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/descriptions`,\r\n            title: 'sidenav.components.dataDisplay.descriptions',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-empty',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/empty`,\r\n            title: 'sidenav.components.dataDisplay.empty',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-list',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/list`,\r\n            title: 'sidenav.components.dataDisplay.list',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-popover',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/popover`,\r\n            title: 'sidenav.components.dataDisplay.popover',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-statistic',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/statistic`,\r\n            title: 'sidenav.components.dataDisplay.statistic',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-tree',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/tree`,\r\n            title: 'sidenav.components.dataDisplay.tree',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-tooltip',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/tooltip`,\r\n            title: 'sidenav.components.dataDisplay.tooltip',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-timeline',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/timeline`,\r\n            title: 'sidenav.components.dataDisplay.timeline',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-tag',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/tag`,\r\n            title: 'sidenav.components.dataDisplay.tag',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-tabs',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/tabs`,\r\n            title: 'sidenav.components.dataDisplay.tabs',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-data-display-table',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/table`,\r\n            title: 'sidenav.components.dataDisplay.table',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        key: 'components-feedback',\r\n        path: `${APP_PREFIX_PATH}/components/feedback`,\r\n        title: 'sidenav.components.feedback',\r\n        icon: CommentOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-feedback-alert',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/alert`,\r\n            title: 'sidenav.components.feedback.alert',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-feedback-drawer',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/drawer`,\r\n            title: 'sidenav.components.feedback.drawer',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-feedback-modal',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/modal`,\r\n            title: 'sidenav.components.feedback.modal',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-feedback-message',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/message`,\r\n            title: 'sidenav.components.feedback.message',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-feedback-notification',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/notification`,\r\n            title: 'sidenav.components.feedback.notification',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-feedback-progress',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/progress`,\r\n            title: 'sidenav.components.feedback.progress',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-feedback-popconfirm',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/popconfirm`,\r\n            title: 'sidenav.components.feedback.popconfirm',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-feedback-result',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/result`,\r\n            title: 'sidenav.components.feedback.result',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-feedback-spin',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/spin`,\r\n            title: 'sidenav.components.feedback.spin',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-feedback-skeleton',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/skeleton`,\r\n            title: 'sidenav.components.feedback.skeleton',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        key: 'components-other',\r\n        path: `${APP_PREFIX_PATH}/components/other`,\r\n        title: 'sidenav.components.other',\r\n        icon: RobotOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-other-anchor',\r\n            path: `${APP_PREFIX_PATH}/components/other/anchor`,\r\n            title: 'sidenav.components.other.anchor',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-other-backtop',\r\n            path: `${APP_PREFIX_PATH}/components/other/backtop`,\r\n            title: 'sidenav.components.other.backtop',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-other-config-provider',\r\n            path: `${APP_PREFIX_PATH}/components/other/config-provider`,\r\n            title: 'sidenav.components.other.configProvider',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-other-divider',\r\n            path: `${APP_PREFIX_PATH}/components/other/divider`,\r\n            title: 'sidenav.components.other.divider',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        key: 'components-charts',\r\n        path: `${APP_PREFIX_PATH}/components/charts`,\r\n        title: 'sidenav.charts',\r\n        icon: PieChartOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-charts-apex',\r\n            path: `${APP_PREFIX_PATH}/components/charts/apex-charts`,\r\n            title: 'sidenav.charts.apex',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'components-charts-chartjs',\r\n            path: `${APP_PREFIX_PATH}/components/charts/chartjs`,\r\n            title: 'sidenav.charts.chartjs',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        key: 'components-maps',\r\n        path: `${APP_PREFIX_PATH}/components/maps`,\r\n        title: 'sidenav.maps',\r\n        icon: EnvironmentOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          // {\r\n          //   key: 'components-maps-google',\r\n          //   path: `${APP_PREFIX_PATH}/components/maps/google-map`,\r\n          //   title: 'sidenav.maps.google',\r\n          //   icon: '',\r\n          //   breadcrumb: true,\r\n          //   submenu: []\r\n          // },\r\n          {\r\n            key: 'components-maps-simple',\r\n            path: `${APP_PREFIX_PATH}/components/maps/simple-map`,\r\n            title: 'sidenav.maps.simple',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nconst docsNavTree = [{\r\n  key: 'docs',\r\n  path: `${APP_PREFIX_PATH}/docs`,\r\n  title: 'sidenav.docs',\r\n  icon: BookOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  submenu: [\r\n    {\r\n      key: 'docs-documentation',\r\n      path: `${APP_PREFIX_PATH}/docs/documentation`,\r\n      title: 'sidenav.docs.documentation',\r\n      icon: FileUnknownOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'docs-changelog',\r\n      path: `${APP_PREFIX_PATH}/docs/documentation/changelog`,\r\n      title: 'sidenav.docs.changelog',\r\n      icon: ProfileOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\nconst settingNavTree = [{\r\n  key: 'settings',\r\n  path: `${APP_PREFIX_PATH}/settings`,\r\n  title: 'sidenav.settings',\r\n  icon: SettingOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  submenu: [\r\n    {\r\n      key: \"systemusers\",\r\n      path: `${APP_PREFIX_PATH}/usermanagement/systemusers`,\r\n      title: \"sidenav.usermangement.systemusers\",\r\n      icon: SolutionOutlined,\r\n      breadcrumb: true,\r\n      submenu: [\r\n        {\r\n          key: \"systemusers.users\",\r\n          path: `${APP_PREFIX_PATH}/users/list`,\r\n          title: \"sidenav.usermangement.systemusers\",\r\n          icon: MobileOutlined,\r\n          breadcrumb: true,\r\n          submenu: [],\r\n        },\r\n\r\n        {\r\n          key: \"rolemanagement\",\r\n          path: `${APP_PREFIX_PATH}/users/roles`,\r\n          title: \"sidenav.usermangement.systemusers.rolemanagement\",\r\n          icon: UsergroupAddOutlined,\r\n          breadcrumb: true,\r\n          submenu: [],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      key: \"userprofile\",\r\n      path: `${APP_PREFIX_PATH}/user/userprofile`,\r\n      title: \"sidenav.usermanagement.userprofile\",\r\n      icon: UserOutlined,\r\n      breadcrumb: true,\r\n      submenu: [],\r\n    },\r\n  ]\r\n}]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree,\r\n  ...appsNavTree,\r\n  // ...componentsNavTree,\r\n  // ...extraNavTree,\r\n  // ...docsNavTree\r\n  ...settingNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","import React, { Component } from 'react'\r\nimport { Table, Button, Tooltip, Form, Modal, Input, Row, Col } from 'antd';\r\nimport { DeleteOutlined, CreditCardOutlined, CalendarOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\r\n\r\nconst { Column } = Table;\r\n\r\nconst AddNewCardForm = ({ visible, onCreate, onCancel }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Modal\r\n      title=\"Add new card\"\r\n      visible={visible}\r\n      okText=\"Save card\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then(values => {\r\n            form.resetFields();\r\n            onCreate(values);\r\n          })\r\n          .catch(info => {\r\n            console.log('Validate Failed:', info);\r\n          });\r\n      }}\r\n    >\r\n      <Form\r\n        form={form}\r\n        name=\"addCardForm\"\r\n        layout=\"vertical\"\r\n      >\r\n        <Form.Item\r\n          label=\"Card holder name\"\r\n          name=\"cardHolderName\"\r\n          rules={\r\n            [\r\n              { \r\n                require: true,\r\n                message: 'Please enter card holder name!' \r\n              }\r\n            ]\r\n          }\r\n        >\r\n          <Input suffix={<CreditCardOutlined />} placeholder=\"Card holder name\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Card number\"\r\n          name=\"cardNumber\"\r\n          hasFeedback\r\n          rules={\r\n            [\r\n              { \r\n                pattern: /(\\d{4}[-. ]?){4}|\\d{4}[-. ]?\\d{6}[-. ]?\\d{5}/g,\r\n                message: 'Please enter a valid credit card number!' \r\n              }\r\n            ]\r\n          }\r\n        >\r\n          <Input suffix={<CreditCardOutlined />} placeholder=\"0000 0000 0000 00\" />\r\n        </Form.Item>\r\n        <Row gutter={ROW_GUTTER}>\r\n          <Col xs={24} sm={24} md={12}>\r\n            <Form.Item\r\n              label=\"Expiry date\"\r\n              name=\"exp\"\r\n              rules={\r\n                [\r\n                  { \r\n                    pattern: /^(0[1-9]|1[0-2])[- /.]\\d{2}/,\r\n                    message: 'Please enter a valid date format!' \r\n                  }\r\n                ]\r\n              }\r\n            >\r\n              <Input suffix={<CalendarOutlined />} placeholder=\"MM/YY\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={24} md={12}>\r\n            <Form.Item\r\n              label=\"CVV code\"\r\n              name=\"cvv\"\r\n              rules={\r\n                [\r\n                  { \r\n                    pattern: /^[0-9]{3,4}$/,\r\n                    message: 'Please enter a CVV code format!' \r\n                  }\r\n                ]\r\n              }\r\n            >\r\n              <Input \r\n                suffix={\r\n                  <Tooltip title=\"The last three digits printed on the back of the card\">\r\n                    <QuestionCircleOutlined className=\"cursor-pointer\" />\r\n                  </Tooltip>\r\n                } \r\n                placeholder=\"000\"\r\n                />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport class Billing extends Component {\r\n\r\n\tstate = {\r\n    selectedRowKeys: [\"card-1\"], // Check here to configure the default column\r\n    creditCards : [\r\n      {\r\n        key: 'card-1',\r\n        cardType: 'Visa',\r\n        cardTypeImg: '/img/others/img-8.png',\r\n        cardNumber: '•••• •••• •••• 7260',\r\n        exp: '06/22'\r\n      },\r\n      {\r\n        key: 'card-2',\r\n        cardType: 'Master',\r\n        cardTypeImg: '/img/others/img-9.png',\r\n        cardNumber: '•••• •••• •••• 1272',\r\n        exp: '04/21'\r\n      }\r\n    ],\r\n    modalVisible: false,\r\n    newCreditCardInfo: {\r\n      cardHolderName: '',\r\n      cardNumber: '',\r\n      exp: '06/22'\r\n    }\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      modalVisible: true,\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      modalVisible: false,\r\n    });\r\n  }\r\n\r\n  addCard = values => {\r\n    const { cardNumber, exp } = values\r\n    const cardType = [\r\n      {\r\n        img: '/img/others/img-8.png',\r\n        type: 'Visa'\r\n      },\r\n      {\r\n        img: '/img/others/img-9.png',\r\n        type: 'Master'\r\n      }\r\n    ]\r\n    const randomCardType = cardType[Math.floor(Math.random() * cardType.length)];\r\n    const reg = /\\b(?:\\d{4}[ -]?){3}(?=\\d{4}\\b)/gm\r\n    const substr = `•••• •••• •••• `\r\n    const cardInfo = {\r\n      key: `card-${this.state.creditCards.length + 1}`,\r\n      cardType: randomCardType.type,\r\n      cardTypeImg: randomCardType.img,\r\n      cardNumber: cardNumber.replace(reg, substr),\r\n      exp: exp\r\n    }\r\n    this.setState({\r\n      modalVisible: false,\r\n      creditCards: [\r\n        ...this.state.creditCards,\r\n        cardInfo\r\n      ]\r\n    })\r\n  };\r\n\r\n\trender() {\r\n\t\tconst { selectedRowKeys, creditCards, modalVisible } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      type: 'radio',\r\n      onChange: this.onSelectChange,\r\n    };\r\n\r\n    const locale = {\r\n      emptyText: (\r\n        <div className=\"text-center my-4\">\r\n          <img src=\"/img/others/img-7.png\" alt=\"Add credit card\" style={{maxWidth: '90px'}}/>\r\n          <h3 className=\"mt-3 font-weight-light\">Please add a credit card!</h3>\r\n        </div>\r\n      )\r\n    };\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<h2 className=\"mb-4\">Billing</h2>\r\n\t\t\t\t<Table locale={locale} dataSource={creditCards} rowSelection={rowSelection} pagination={false}>\r\n\t\t\t\t\t<Column \r\n            title=\"Card type\" \r\n            key=\"cardType\" \r\n            render={(text, record) => (\r\n              <>\r\n                <img src={record.cardTypeImg} alt={record.cardType} />\r\n                <span className=\"ml-2\">{record.cardType}</span>\r\n              </>\r\n            )}\r\n          />\r\n\t\t\t\t\t<Column title=\"Card Number\" dataIndex=\"cardNumber\" key=\"cardNumber\" />\r\n\t\t\t\t\t<Column title=\"Expires on\" dataIndex=\"exp\" key=\"exp\" />\r\n          <Column \r\n            title=\"\" \r\n            key=\"actions\"\r\n            className=\"text-right\" \r\n            render={(text, record) => (\r\n              <Tooltip title=\"Remove card\">\r\n                <Button \r\n                  type=\"text\" \r\n                  shape=\"circle\" \r\n                  icon={<DeleteOutlined />} \r\n                  onClick={() => {\r\n                    const newCreditCards = [...creditCards];\r\n                    this.setState({\r\n                      creditCards: newCreditCards.filter(item => item.key !== record.key),\r\n                    });\r\n                  }} \r\n                />\r\n              </Tooltip>\r\n            )}\r\n          />\r\n\t\t\t\t</Table>\r\n        <div className=\"mt-3 text-right\">\r\n          <Button type=\"primary\" onClick={this.showModal}>Add new card</Button>\r\n        </div>\r\n          <AddNewCardForm visible={modalVisible} onCreate={this.addCard} onCancel={this.closeModal}/>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Billing\r\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu, Grid } from 'antd';\nimport IntlMessage from '../util-components/IntlMessage';\nimport Icon from '../util-components/Icon';\nimport navigationConfig from 'configs/NavigationConfig';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\nimport utils from 'utils'\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\n\nconst { useBreakpoint } = Grid;\n\nconst setLocale = (localeKey, isLocaleOn = true) =>\n\tisLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\n\nconst setDefaultOpen = (key) => {\n\tlet keyList = [];\n\tlet keyString = \"\";\n\tif (key) {\n\t\tconst arr = key.split(\"-\");\n\t\tfor (let index = 0; index < arr.length; index++) {\n\t\t\tconst elm = arr[index];\n\t\t\tindex === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\n\t\t\tkeyList.push(keyString);\n\t\t}\n\t}\n\treturn keyList;\n};\n\nconst MenuItem = ({title, icon, path}) => {\n\n\tconst dispatch = useDispatch();\n\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\n\n\tconst closeMobileNav = () => {\n\t\tif (isMobile) {\n\t\t\tdispatch(onMobileNavToggle(false))\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{icon && <Icon type={icon} /> }\n\t\t\t<span>{setLocale(title)}</span>\n\t\t\t{path && <Link onClick={closeMobileNav} to={path} />}\n\t\t</>\n\t)\n}\n\nconst getSideNavMenuItem = (navItem) => navItem.map(nav => {\n\treturn {\n\t\tkey: nav.key,\n\t\tlabel: <MenuItem title={nav.title} {...(nav.isGroupTitle ? {} : {path: nav.path, icon: nav.icon})} />,\n\t\t...(nav.isGroupTitle ? {type: 'group'} : {}),\n\t\t...(nav.submenu.length > 0 ? {children: getSideNavMenuItem(nav.submenu)} : {})\n\t}\n})\n\nconst getTopNavMenuItem = (navItem) => navItem.map(nav => {\n\treturn {\n\t\tkey: nav.key,\n\t\tlabel: <MenuItem title={nav.title} icon={nav.icon} {...(nav.isGroupTitle ? {} : {path: nav.path})} />,\n\t\t...(nav.submenu.length > 0 ? {children: getTopNavMenuItem(nav.submenu)} : {})\n\t}\n})\n\nconst SideNavContent = (props) => {\n\n\tconst { routeInfo, hideGroupTitle, sideNavTheme = SIDE_NAV_LIGHT } = props;\n\n\tconst menuItems = useMemo(() => getSideNavMenuItem(navigationConfig), []);\n\n\treturn (\n\t\t<Menu\n\t\t\tmode=\"inline\"\n\t\t\ttheme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\n\t\t\tstyle={{ height: \"100%\", borderInlineEnd: 0 }}\n\t\t\tdefaultSelectedKeys={[routeInfo?.key]}\n\t\t\tdefaultOpenKeys={setDefaultOpen(routeInfo?.key)}\n\t\t\tclassName={hideGroupTitle ? \"hide-group-title\" : \"\"}\n\t\t\titems={menuItems}\n\t\t/>\n\t);\n};\n\nconst TopNavContent = () => {\n\n\tconst topNavColor = useSelector(state => state.theme.topNavColor);\n\n\tconst menuItems = useMemo(() => getTopNavMenuItem(navigationConfig), [])\n\n\treturn (\n\t\t<Menu \n\t\t\tmode=\"horizontal\" \n\t\t\tstyle={{ backgroundColor: topNavColor }}\n\t\t\titems={menuItems}\n\t\t/>\n\t);\n};\n\nconst MenuContent = (props) => {\n\treturn props.type === NAV_TYPE_SIDE ? (\n\t\t<SideNavContent {...props} />\n\t) : (\n\t\t<TopNavContent {...props} />\n\t);\n};\n\nexport default MenuContent;\n","/** @jsxImportSource @emotion/react */\nimport { Layout } from 'antd';\nimport { connect } from 'react-redux';\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport MenuContent from './MenuContent';\nimport { css } from '@emotion/react';\nimport { TEMPLATE, GRAY_SCALE, DARK_MODE } from \"constants/ThemeConstant\";\nimport { useSelector } from 'react-redux';\n\nconst { Sider } = Layout;\n\nexport const SideNav = ({navCollapsed, routeInfo, hideGroupTitle, currentTheme }) => {\n  const sideNavTheme = useSelector(state => state.theme.sideNavTheme);\n  const props = { sideNavTheme, routeInfo , hideGroupTitle }\n  return (\n    <Sider \n      css={css`\n        height: calc(100vh - ${TEMPLATE.HEADER_HEIGHT}px); \n        position: fixed !important;\n        top: ${TEMPLATE.HEADER_HEIGHT}px;\n        box-shadow: 0 1px 4px -1px rgba(0,0,0,.15);\n        z-index: 999;\n        direction: ltr;\n        ${currentTheme === 'light' && sideNavTheme !== SIDE_NAV_DARK ? `background-color: ${GRAY_SCALE.WHITE} !important;`  : `background-color: ${TEMPLATE.SIDE_NAV_DARK_BG_COLOR} !important;`}\n        ${currentTheme === 'dark' && sideNavTheme !== SIDE_NAV_DARK ? `background-color: ${DARK_MODE.BG_COLOR} !important`  : ``}\n        ${currentTheme === 'dark' && sideNavTheme === SIDE_NAV_DARK ? `background-color: ${TEMPLATE.SIDE_NAV_DARK_BG_COLOR} !important`  : ``}\n      `}\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \n      width={SIDE_NAV_WIDTH} \n      collapsed={navCollapsed}\n    >\n      <Scrollbars autoHide>\n        <MenuContent \n          type={NAV_TYPE_SIDE}\n          {...props}\n        />\n      </Scrollbars>\n    </Sider>\n  )\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { navCollapsed, sideNavTheme, currentTheme } =  theme;\n  return { navCollapsed, sideNavTheme, currentTheme }\n};\n\nexport default connect(mapStateToProps)(SideNav);\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\nimport utils from 'utils'\nimport MenuContent from './MenuContent'\nimport styled from '@emotion/styled';\nimport { TEMPLATE, WHITE, GRAY } from 'constants/ThemeConstant';\n\nconst TopNvContent = styled('div')`\n\theight: ${TEMPLATE.HEADER_HEIGHT}px;\n\tbackground-color: ${props => props.backgroundColor ? props.backgroundColor : '#001529'};\n\tposition: fixed;\n\ttop: ${TEMPLATE.HEADER_HEIGHT}px;\n\twidth: 100%;\n\tz-index: @zindex-modal;\n\tbox-shadow: 0 0.75rem 1.5rem rgba(18,38,63,.03);\n\n\t.top-nav-wrapper {\n\t\tmax-width: ${TEMPLATE.CONTENT_MAX_WIDTH}px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\n\t\t.ant-menu-horizontal {\n\t\t\tline-height: ${TEMPLATE.HEADER_HEIGHT}px;\n\t\t\tborder-bottom: 0;\n\t\t}\n\t}\n\n\t${props => props.mode === 'light' ? `\n\t\t.ant-menu {\n\t\t\tcolor: ${WHITE};\n\n\t\t\t.ant-menu-item:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected), \n\t\t\t.ant-menu-submenu-title:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected),\n\t\t\t.ant-menu-submenu-selected >.ant-menu-submenu-title {\n\t\t\t\tcolor: rgba(255, 255, 255, 0.75)\n\t\t\t}\n\t\t}\n    ` : '' }\n\n\t${props => props.mode === 'dark' ? `\n\t\t.ant-menu {\n\t\t\tcolor: ${GRAY};\n\n\t\t\t.ant-menu-item:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected), \n\t\t\t.ant-menu-submenu-title:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected),\n\t\t\t.ant-menu-submenu-selected >.ant-menu-submenu-title {\n\t\t\t\tcolor: rgba(0, 0, 0, 0.75)\n\t\t\t}\n\t\t}\n    ` : '' }\n`\n\nexport const TopNav = ({topNavColor }) => {\n\tconst props = { topNavColor }\n\treturn (\n\t\t<TopNvContent mode={utils.getColorContrast(topNavColor)} backgroundColor={topNavColor}>\n\t\t\t<div className=\"top-nav-wrapper\">\n\t\t\t\t<MenuContent\n\t\t\t\t\ttype={NAV_TYPE_TOP} \n\t\t\t\t\t{...props}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</TopNvContent>\n\t)\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { topNavColor } =  theme;\n  return { topNavColor }\n};\n\nexport default connect(mapStateToProps)(TopNav);\n","import React from 'react'\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\nimport { APP_NAME } from 'configs/AppConfig';\nimport { useSelector } from 'react-redux';\nimport utils from 'utils';\nimport { Grid } from 'antd';\nimport styled from '@emotion/styled';\nimport { TEMPLATE } from 'constants/ThemeConstant';\n\nconst LogoWrapper = styled.div(() => ({\n\theight: TEMPLATE.HEADER_HEIGHT,\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tpadding: '0 1rem',\n\tbackgroundColor: 'transparent',\n\ttransition: 'all .2s ease',\n}));\n\nconst { useBreakpoint } = Grid;\n\nexport const Logo = ({ mobileLogo, logoType }) => {\n\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\n\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed);\n\tconst navType = useSelector(state => state.theme.navType);\n\n\tconst getLogoWidthGutter = () => {\n\t\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\n\t\tif(isMobile && !mobileLogo) {\n\t\t\treturn 0\n\t\t}\n\t\tif(isNavTop) {\n\t\t\treturn 'auto'\n\t\t}\n\t\tif(navCollapsed) {\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`\n\t\t} else {\n\t\t\treturn `${SIDE_NAV_WIDTH}px`\n\t\t}\n\t}\n\t\n\tconst getLogo = () => {\n\t\tif(logoType === 'light') {\n\t\t\tif(navCollapsed) {\n\t\t\treturn '/img/logo-sm-white.png'\n\t\t\t}\n\t\t\treturn '/img/logo-white.png'\n\t\t}\n\t\n\t\tif (navCollapsed) {\n\t\t\treturn '/img/logo-sm.png'\n\t\t}\n\t\treturn '/img/logo.png'\n\t}\n\n\treturn (\n\t\t<LogoWrapper className={isMobile && !mobileLogo ? 'd-none' : 'logo'} style={{width: `${getLogoWidthGutter()}`}}>\n\t\t\t<img src={getLogo()} alt={`${APP_NAME} logo`}/>\n\t\t</LogoWrapper>\n\t)\n}\n\nexport default Logo;\n","import React from \"react\";\nimport { Drawer } from \"antd\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\nimport MenuContent from \"./MenuContent\";\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\nimport Logo from \"./Logo\";\nimport Flex from \"components/shared-components/Flex\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\n\nexport const MobileNav = ({\n\trouteInfo,\n\thideGroupTitle\n}) => {\n\n\tconst dispatch = useDispatch();\n\tconst currentTheme = useSelector(state => state.theme.currentTheme);\n\tconst mobileNav = useSelector(state => state.theme.mobileNav);\n\n\tconst menuContentprops = { routeInfo, hideGroupTitle };\n\n\tconst onClose = () => {\n\t\tdispatch(onMobileNavToggle(false));\n\t};\n\n\treturn (\n\t\t<Drawer\n\t\t\tplacement=\"left\"\n\t\t\tclosable={false}\n\t\t\tonClose={onClose}\n\t\t\topen={mobileNav}\n\t\t\tbodyStyle={{ padding: 5 }}\n\t\t\twidth={300}\n\t\t>\n\t\t\t<Flex flexDirection=\"column\" className=\"h-100\">\n\t\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\">\n\t\t\t\t\t<Logo logoType={currentTheme === 'dark' ? 'light' : 'dark'} mobileLogo={true} />\n\t\t\t\t\t<div className=\"px-3\" onClick={() => onClose()}>\n\t\t\t\t\t\t<ArrowLeftOutlined />\n\t\t\t\t\t</div>\n\t\t\t\t</Flex>\n\t\t\t\t<div className=\"h-100\">\n\t\t\t\t\t<Scrollbars autoHide>\n\t\t\t\t\t\t<MenuContent type={NAV_TYPE_SIDE} {...menuContentprops} />\n\t\t\t\t\t</Scrollbars>\n\t\t\t\t</div>\n\t\t\t</Flex>\n\t\t</Drawer>\n\t);\n};\n\nexport default MobileNav;\n","import styled from '@emotion/styled';\nimport { \n    GRAY_SCALE,\n} from 'constants/ThemeConstant'\nimport { baseTheme, rgba } from 'configs/ThemeConfig'\nimport { MEDIA_QUERIES } from 'constants/ThemeConstant'\n\nconst isDark = (mode) => {\n    return mode === 'dark'\n}\n\nconst NavItem = styled('div')`\n    display: flex;\n    align-items: center;\n    line-height: 1.5;\n    cursor: pointer;\n    padding: 0 1rem;\n    color: ${props => isDark(props.mode) ?  GRAY_SCALE.GRAY : rgba(GRAY_SCALE.WHITE, 0.85) };\n\n    @media ${MEDIA_QUERIES.MOBILE} {\n\t\tpadding: 0 0.75rem;\n\t}\n\n    .ant-badge {\n        color: ${props => isDark(props.mode) ?  GRAY_SCALE.GRAY : rgba(GRAY_SCALE.WHITE, 0.85) };\n    }\n\n    .nav-icon {\n        font-size: 1.25rem;\n    }\n\n    &:hover,\n    &.ant-dropdown-open,\n    &.ant-popover-open {\n        > * {\n            color: ${props => isDark(props.mode) ? baseTheme.colorPrimary : GRAY_SCALE.WHITE};\n        }\n\n        .profile-text {\n            color: ${props => isDark(props.mode) ? GRAY_SCALE.GRAY : GRAY_SCALE.WHITE};\n        }\n    }\n`\n\nexport default NavItem","import { React, useEffect, useState } from \"react\";\nimport { Dropdown, Avatar } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { LogoutOutlined } from \"@ant-design/icons\";\nimport NavItem from \"./NavItem\";\nimport Flex from \"components/shared-components/Flex\";\nimport { signOut } from \"store/slices/authSlice\";\nimport styled from \"@emotion/styled\";\nimport {\n  FONT_WEIGHT,\n  MEDIA_QUERIES,\n  SPACER,\n  FONT_SIZES,\n} from \"constants/ThemeConstant\";\n\nconst Icon = styled.div(() => ({\n  fontSize: FONT_SIZES.LG,\n}));\n\nconst Profile = styled.div(() => ({\n  display: \"flex\",\n  alignItems: \"center\",\n}));\n\nconst UserInfo = styled(\"div\")`\n  padding-left: ${SPACER[2]};\n\n  @media ${MEDIA_QUERIES.MOBILE} {\n    display: none;\n  }\n`;\n\nconst Name = styled.div(() => ({\n  fontWeight: FONT_WEIGHT.SEMIBOLD,\n}));\n\nconst Title = styled.span(() => ({\n  opacity: 0.8,\n}));\nconst MenuItemSignOut = (props) => {\n  const dispatch = useDispatch();\n\n  const handleSignOut = () => {\n    dispatch(signOut());\n  };\n\n  return (\n    <div onClick={handleSignOut}>\n      <Flex alignItems=\"center\" gap={SPACER[2]}>\n        <Icon>\n          <LogoutOutlined />\n        </Icon>\n        <span>{props.label}</span>\n      </Flex>\n    </div>\n  );\n};\n\nconst items = [\n  {\n    key: \"Sign Out\",\n    label: <MenuItemSignOut label=\"Sign Out\" />,\n  },\n];\n\nexport const NavProfile = ({ mode }) => {\n  const [username, setUsernamr] = useState([]);\n  const [role, setRole] = useState([]);\n\n  useEffect(() => {\n    const getUsername = () => {\n      const userDetails = localStorage.getItem(\"userDetails\");\n      const username = JSON.parse(userDetails).name;\n      //   const role = JSON.parse(userDetails).role;\n\n      setUsernamr(username);\n      setRole(role);\n    };\n    getUsername();\n  }, []);\n  const initials = `${username[0]}`;\n\n  return (\n    <Dropdown placement=\"bottomRight\" menu={{ items }} trigger={[\"click\"]}>\n      <NavItem mode={mode}>\n        <Profile>\n          <Avatar>{initials}</Avatar> {/* Use initials instead of the image */}\n          <UserInfo className=\"profile-text\">\n            <Name>{username}</Name>\n            {/* <Title>{role}</Title> */}\n          </UserInfo>\n        </Profile>\n      </NavItem>\n    </Dropdown>\n  );\n};\n\nexport default NavProfile;\n","import styled from '@emotion/styled';\nimport { TEMPLATE } from 'constants/ThemeConstant';\n\nconst Header = styled.div(({headerNavColor, isDarkTheme}) => ({\n\tposition: 'fixed',\n\twidth: '100%',\n\tleft: 0,\n\tzIndex: 1000,\n\tdisplay: 'flex',\n\tflex: '0 0 auto',\n\theight: TEMPLATE.HEADER_HEIGHT,\n\tlineHeight: `${TEMPLATE.HEADER_HEIGHT}px`,\n\tbackgroundColor: headerNavColor,\n\tboxShadow: isDarkTheme ? '0 1px 8px -1px rgb(0 0 0 / 75%)' : '0 1px 4px -1px rgb(0 0 0 / 15%)'\n}))\n\n\nexport default Header","import styled from '@emotion/styled';\n\nconst HeaderWrapper = styled.div(({isNavTop}) => ({\n\twidth: '100%',\n\tdisplay: 'flex',\n\t...isNavTop ? {maxWidth: isNavTop, margin: 'auto'} : {}\n}))\n\n\nexport default HeaderWrapper","import styled from '@emotion/styled';\n\nconst Nav = styled.div(({navWidth}) => ({\n\tdisplay: 'flex',\n\tjustifyContent: 'space-between',\n\tposition: 'relative',\n\ttransition: 'all .2s ease',\n\twidth: `calc(100% - ${navWidth})`\n}))\n\nexport default Nav","import styled from '@emotion/styled';\n\nconst NavEdge = styled.div(({left, right}) => {\n\n\tif (left) {\n\t\treturn {\n\t\t\tdisplay: 'flex'\n\t\t}\n\t}\n\n\tif (right) {\n\t\treturn {\n\t\t\tmarginLeft: 'auto',\n\t\t\tpadding: '0 1rem',\n\t\t\tdisplay: 'flex'\n\t\t}\n\t}\n\n\treturn {}\n})\n\nexport default NavEdge","/** @jsxImportSource @emotion/react */\nimport { useState, useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TEMPLATE } from 'constants/ThemeConstant';\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\nimport Logo from '../Logo';\nimport NavProfile from '../NavProfile';\nimport Header from './Header';\nimport HeaderWrapper from './HeaderWrapper';\nimport Nav from './Nav'\nimport NavEdge from './NavEdge';\nimport NavItem from '../NavItem';\nimport { toggleCollapsedNav, onMobileNavToggle } from 'store/slices/themeSlice';\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\nimport utils from 'utils'\n\nexport const HeaderNav = props => {\n\n\tconst { isMobile } = props;\n\n\tconst [searchActive, setSearchActive] = useState(false);\n\n\tconst dispatch = useDispatch()\n\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed)\n\tconst mobileNav = useSelector(state => state.theme.mobileNav)\n\tconst navType = useSelector(state => state.theme.navType)\n\tconst headerNavColor = useSelector(state => state.theme.headerNavColor)\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\n\n\tconst onSearchClose = () => {\n\t\tsetSearchActive(false)\n\t}\n\n\tconst onToggle = () => {\n\t\tif(!isMobile) {\n\t\t\tdispatch(toggleCollapsedNav(!navCollapsed))\n\t\t} else {\n\t\t\tdispatch(onMobileNavToggle(!mobileNav))\n\t\t}\n\t}\n\n\tconst isNavTop = navType === NAV_TYPE_TOP \n\tconst isDarkTheme = currentTheme === 'dark'\n\n    const navMode = useMemo(() => {\n\t\tif(!headerNavColor) {\n\t\t\treturn utils.getColorContrast(isDarkTheme ? '#000000' : '#ffffff' )\n\t\t}\n\t\treturn utils.getColorContrast(headerNavColor);\n\t}, [isDarkTheme, headerNavColor])\n\n\tconst navBgColor = isDarkTheme ? TEMPLATE.HEADER_BG_DEFAULT_COLOR_DARK : TEMPLATE.HEADER_BG_DEFAULT_COLOR_LIGHT;\n\n\tconst getNavWidth = () => {\n\t\tif(isNavTop || isMobile) {\n\t\t\treturn '0px';\n\t\t}\n\t\tif(navCollapsed) {\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`;\n\t\t} else {\n\t\t\treturn `${SIDE_NAV_WIDTH}px`;\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif(!isMobile) {\n\t\t\tonSearchClose();\n\t\t}\n\t})\n\n\t\n\treturn (\n\t\t<Header isDarkTheme={isDarkTheme} headerNavColor={headerNavColor || navBgColor}>\n\t\t\t<HeaderWrapper isNavTop={isNavTop}>\n\t\t\t\t<Logo logoType={navMode}/>\n\t\t\t\t<Nav navWidth={getNavWidth()}>\n\t\t\t\t\t<NavEdge left>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisNavTop && !isMobile ? null : (\n\t\t\t\t\t\t\t\t<NavItem onClick={onToggle} mode={navMode}>\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t{navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</NavEdge>\n\t\t\t\t\t<NavEdge right>\n\t\t\t\t\t\t<NavProfile mode={navMode} />\n\t\t\t\t\t</NavEdge>\n\t\t\t\t</Nav>\n\t\t\t</HeaderWrapper>\n\t\t</Header>\n\t)\n}\n\nexport default HeaderNav;","import React, { Component } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Breadcrumb } from 'antd';\nimport navigationConfig from \"configs/NavigationConfig\";\nimport IntlMessage from 'components/util-components/IntlMessage';\n\nlet breadcrumbData = { \n\t'/app' : <IntlMessage id=\"home\" />\n};\n\nnavigationConfig.forEach((elm, i) => {\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\n\tassignBreadcrumb(elm);\n\tif (elm.submenu) {\n\t\telm.submenu.forEach( elm => {\n\t\t\tassignBreadcrumb(elm)\n\t\t\tif(elm.submenu) {\n\t\t\t\telm.submenu.forEach( elm => {\n\t\t\t\t\tassignBreadcrumb(elm)\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n})\n\nconst BreadcrumbRoute = props => {\n\tconst location = useLocation();\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\n\tconst breadcrumbItems = pathSnippets.map((_, index) => {\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\n\t\treturn {\n\t\t\ttitle: <Link to={url}>{breadcrumbData[url]}</Link>\n\t\t}\n\t});\n  \n\treturn (\n\t\t<Breadcrumb items={breadcrumbItems} />\n\t);\n};\n\nexport class AppBreadcrumb extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<BreadcrumbRoute />\n\t\t)\n\t}\n}\n\nexport default AppBreadcrumb\n","/** @jsxImportSource @emotion/react */\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\nimport IntlMessage from '../util-components/IntlMessage';\nimport { css } from '@emotion/react';\nimport { MEDIA_QUERIES } from 'constants/ThemeConstant';\n\nexport const PageHeader = ({ title, display }) => {\n\treturn (\n\t\tdisplay ? (\n\t\t\t<div\n\t\t\t\tcss={css`\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tmargin-bottom: 1rem;\n\n\t\t\t\t\t@media ${MEDIA_QUERIES.LAPTOP_ABOVE} {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t}\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\n\t\t\t\t</h3>\n\t\t\t\t<AppBreadcrumb />\n\t\t\t</div>\n\t\t)\n\t\t: null\n\t)\n}\n\nexport default PageHeader","/** @jsxImportSource @emotion/react */\nimport React from 'react'\nimport { APP_NAME } from 'configs/AppConfig';\nimport { css } from '@emotion/react';\nimport { TEMPLATE, MEDIA_QUERIES, DARK_MODE, BORDER } from 'constants/ThemeConstant'\nimport { useSelector } from 'react-redux';\n\nexport default function Footer() {\n\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\n\n\treturn (\n\t\t<footer css={css`\n\t\t\theight: ${TEMPLATE.FOOTER_HEIGHT}px;\n\t\t\tdisplay: flex;\n\t\t\tmargin: 0 ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\n\t\t\talign-items: center;\n\t\t\tborder-top: 1px solid ${currentTheme === 'dark' ? DARK_MODE.BORDER_BASE_COLOR : BORDER.BASE_COLOR };\n\t\t\tjustify-content: space-between;\n\t\t\n\t\t\t@media ${MEDIA_QUERIES.MOBILE} {\n\t\t\t\tjustify-content: center;\n       \t\t\tflex-direction: column;\n\t\t\t}\n\t\t`}>\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\n\t\t\t<div>\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\n\t\t\t</div>\n\t\t</footer>\n\t)\n}\n\n","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport { Layout, Grid,} from 'antd';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { TEMPLATE, MEDIA_QUERIES } from 'constants/ThemeConstant';\r\nimport styled from '@emotion/styled';\r\nimport utils from 'utils';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst AppContent = styled('div')`\r\n    padding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\r\n    margin-top: ${TEMPLATE.HEADER_HEIGHT}px;\r\n    min-height: calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px);\r\n    position: relative;\r\n\r\n    ${props => props.isNavTop ? `\r\n        max-width: ${TEMPLATE.CONTENT_MAX_WIDTH}px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        width: 100%;\r\n\r\n        @media ${MEDIA_QUERIES.DESKTOP} { \r\n            margin-top: ${TEMPLATE.HEADER_HEIGHT + TEMPLATE.TOP_NAV_HEIGHT}px;\r\n            min-height: calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px - ${TEMPLATE.TOP_NAV_HEIGHT}px);\r\n        }\r\n    ` : '' }\r\n\r\n    @media ${MEDIA_QUERIES.MOBILE} { \r\n        padding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER_SM}px;\r\n    }\r\n`\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, direction, children }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n    const screens = utils.getBreakPoint(useBreakpoint());\r\n    const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n    const isNavSide = navType === TEMPLATE.NAV_TYPE_SIDE\r\n    const isNavTop = navType === TEMPLATE.NAV_TYPE_TOP\r\n\r\n    const getLayoutGutter = () => {\r\n        if(isNavTop || isMobile) {\r\n            return 0\r\n        }\r\n        return navCollapsed ? TEMPLATE.SIDE_NAV_COLLAPSED_WIDTH : TEMPLATE.SIDE_NAV_WIDTH\r\n    }\r\n\r\n    const getLayoutDirectionGutter = () => {\r\n        if(direction === TEMPLATE.DIR_LTR) {\r\n            return {paddingLeft: getLayoutGutter()}\r\n        }  \r\n        if(direction === TEMPLATE.DIR_RTL) {\r\n            return {paddingRight: getLayoutGutter()}\r\n        }\r\n        return {paddingLeft: getLayoutGutter()}\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <HeaderNav isMobile={isMobile}/>\r\n            {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n            <Layout>\r\n                {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo} /> : null }\r\n                <Layout style={getLayoutDirectionGutter()}>\r\n                    <AppContent isNavTop={isNavTop}>\r\n                        <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n                        <Content className=\"h-100\">\r\n                            <Suspense fallback={<Loading cover=\"content\"/>}>\r\n                                {children}\r\n                            </Suspense>\r\n                        </Content>\r\n                    </AppContent>\r\n                    <Footer />\r\n                </Layout>\r\n            </Layout>\r\n            {isMobile && <MobileNav routeInfo={currentRouteInfo} />}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n    const { navCollapsed, navType, locale } =  theme;\r\n    return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","/** @jsxImportSource @emotion/react */\r\nimport { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Drawer, Card } from \"antd\";\r\nimport utils from 'utils'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, DARK_MODE, BORDER } from 'constants/ThemeConstant';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst MainContent = styled.div(({hasPageHeader, gutter}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tminHeight: `calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px - ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px * 2  - 2px);`,\r\n\t\twidth: '100%',\r\n\t\tpadding: gutter ? 24: 0\r\n\t}\r\n\r\n\tif (hasPageHeader) {\r\n\t\tbaseStyle.minHeight = '75vh'\r\n\t}\r\n\r\n\treturn baseStyle\r\n})\r\n\r\n\r\nconst SideContent = props => {\r\n\tconst { sideContent, sideContentWidth = 250, border } = props\r\n\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\r\n\treturn (\r\n\t\t<div style={{width: `${sideContentWidth}px`, borderInlineEnd: `1px solid ${currentTheme === 'dark' ? DARK_MODE.BORDER_BASE_COLOR : BORDER.BASE_COLOR }`}}>\r\n\t\t\t{sideContent}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst SideContentMobile = props => {\r\n\tconst { sideContent, visible, onSideContentClose } = props\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\twidth={320}\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onSideContentClose}\r\n\t\t\topen={visible}\r\n\t\t\tbodyStyle={{paddingLeft: 0, paddingRight: 0}}\r\n\t\t>\r\n\t\t\t<div className=\"h-100\">\r\n\t\t\t\t{sideContent}\r\n\t\t\t</div>\r\n\t\t</Drawer>\r\n\t)\r\n}\r\n\r\nexport const InnerAppLayout = props => {\r\n\tconst { mainContent, pageHeader, sideContentGutter = true } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst [visible, setVisible] = useState(false);\r\n\r\n\tconst close = (e) => {\r\n\t\tsetVisible(false)\r\n\t} \r\n\r\n\tconst openSideContentMobile = () => {\r\n\t\tsetVisible(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card className=\"mb-0\" css={css`\r\n\t\t\t>.ant-card-body {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tpadding: 0px;\r\n\t\t\t}\r\n\t\t`}>\r\n\t\t\t{isMobile ? \r\n\t\t\t\t<SideContentMobile \r\n\t\t\t\t\tvisible={visible} \r\n\t\t\t\t\tonSideContentClose={close}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/> \r\n\t\t\t\t: \r\n\t\t\t\t<SideContent {...props} />\r\n\t\t\t}\r\n\t\t\t<MainContent hasPageHeader={pageHeader} gutter={sideContentGutter}>\r\n\t\t\t\t{isMobile ? \r\n\t\t\t\t\t<div className={`font-size-lg mb-3 ${!sideContentGutter ? 'pt-3 px-3' : ''}`}>\r\n\t\t\t\t\t\t<MenuOutlined onClick={() => openSideContentMobile()}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{mainContent}\r\n\t\t\t</MainContent>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nInnerAppLayout.propTypes = {\r\n\tsideContent: PropTypes.node,\r\n\tmainContent: PropTypes.node,\r\n\tpageHeader: PropTypes.bool,\r\n\tsideContentWidth: PropTypes.number,\r\n\tborder: PropTypes.bool,\r\n\tsideContentGutter: PropTypes.bool\r\n};\r\n\r\nexport default InnerAppLayout\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;"],"names":["Flex","styled","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","id","fallback","translate","t","useTranslation","Icon","this","props","type","className","React","Component","dashBoardNavTree","Table","key","path","APP_PREFIX_PATH","title","icon","DashboardOutlined","breadcrumb","isGroupTitle","submenu","DotChartOutlined","appsNavTree","AppstoreOutlined","TeamOutlined","AuditOutlined","settingNavTree","AntDesignOutlined","InfoCircleOutlined","LayoutOutlined","CompassOutlined","FileDoneOutlined","DesktopOutlined","CommentOutlined","RobotOutlined","PieChartOutlined","EnvironmentOutlined","BookOutlined","FileUnknownOutlined","ProfileOutlined","SettingOutlined","SolutionOutlined","MobileOutlined","UsergroupAddOutlined","UserOutlined","useBreakpoint","Grid","setLocale","localeKey","isLocaleOn","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","MenuItem","dispatch","useDispatch","isMobile","utils","includes","onClick","onMobileNavToggle","to","getSideNavMenuItem","navItem","map","nav","label","children","getTopNavMenuItem","SideNavContent","routeInfo","hideGroupTitle","sideNavTheme","SIDE_NAV_LIGHT","menuItems","useMemo","navigationConfig","mode","theme","style","height","borderInlineEnd","defaultSelectedKeys","defaultOpenKeys","items","TopNavContent","topNavColor","useSelector","state","backgroundColor","NAV_TYPE_SIDE","Sider","Layout","connect","navCollapsed","currentTheme","css","TEMPLATE","SIDE_NAV_DARK","GRAY_SCALE","DARK_MODE","width","SIDE_NAV_WIDTH","collapsed","autoHide","TopNvContent","WHITE","GRAY","NAV_TYPE_TOP","LogoWrapper","transition","mobileLogo","logoType","navType","isNavTop","SIDE_NAV_COLLAPSED_WIDTH","getLogoWidthGutter","src","alt","APP_NAME","mobileNav","menuContentprops","onClose","placement","closable","open","bodyStyle","ArrowLeftOutlined","isDark","rgba","MEDIA_QUERIES","baseTheme","fontSize","FONT_SIZES","Profile","UserInfo","SPACER","Name","fontWeight","FONT_WEIGHT","MenuItemSignOut","opacity","signOut","LogoutOutlined","useState","username","setUsernamr","role","setRole","useEffect","userDetails","localStorage","getItem","JSON","parse","name","getUsername","initials","menu","trigger","headerNavColor","isDarkTheme","position","left","zIndex","flex","lineHeight","boxShadow","maxWidth","navWidth","right","marginLeft","setSearchActive","navMode","navBgColor","toggleCollapsedNav","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","i","assignBreadcrumb","obj","forEach","BreadcrumbRoute","pathSnippets","useLocation","pathname","filter","breadcrumbItems","_","url","slice","join","AppBreadcrumb","Footer","BORDER","Date","getFullYear","href","e","preventDefault","Content","AppContent","AppLayout","direction","location","currentRouteInfo","screens","isNavSide","getLayoutGutter","paddingLeft","paddingRight","Suspense","Loading","cover","locale","MainContent","hasPageHeader","gutter","minHeight","SideContent","sideContent","sideContentWidth","border","SideContentMobile","visible","onSideContentClose","mainContent","pageHeader","sideContentGutter","setVisible","Utils","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","color","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","indexOf","r","g","b","a","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","list","value","data","item","input","searchText","breakpoints"],"sourceRoot":""}